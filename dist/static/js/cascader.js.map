{"version":3,"file":"cascader.js","sources":["../../../node_modules/.pnpm/china-area-data@5.0.1/node_modules/china-area-data/data.js","../../../src/utils/chinaArea.ts","../../../src/views/able/cascader.vue"],"sourcesContent":["module.exports = require('./data.json')\n","import REGION_DATA from \"china-area-data\";\nimport { cloneDeep } from \"@pureadmin/utils\";\n\ninterface ProvinceData {\n  value: string;\n  label: string;\n  children?: Array<ProvinceData>;\n}\n\n// code转汉字大对象,例：CodeToText['110000']输出北京市\nconst CodeToText = {};\n// 汉字转code大对象,例：TextToCode['北京市']['市辖区']['朝阳区'].code输出110105\nconst TextToCode = {};\n// 省份对象\nconst provinceObject = REGION_DATA[\"86\"];\n// 省市区三级联动数据（不带“全部”选项）\nconst regionData = [];\n// 省市二级联动数据（不带“全部”选项）\nlet provinceAndCityData = [];\n\nconst ALL_TEXT = \"全部\";\n\nCodeToText[\"\"] = ALL_TEXT;\n\n// 计算省\nObject.keys(provinceObject).forEach(prop => {\n  const provinceText = provinceObject[prop];\n  regionData.push({\n    value: prop, // 省份code值\n    label: provinceText // 省份汉字\n  });\n  CodeToText[prop] = provinceText;\n  TextToCode[provinceText] = {\n    code: prop\n  };\n  TextToCode[provinceText][ALL_TEXT] = {\n    code: \"\"\n  };\n});\n\n// 计算市\nregionData.forEach((item: ProvinceData) => {\n  const provinceCode = item.value;\n  const provinceText = item.label;\n  const provinceChildren = [];\n  const provinceData = REGION_DATA[provinceCode] ?? {};\n\n  Object.keys(provinceData).forEach(prop => {\n    provinceChildren.push({\n      value: prop,\n      label: provinceData[prop]\n    });\n    CodeToText[prop] = provinceData[prop];\n    TextToCode[provinceText][provinceData[prop]] = {\n      code: prop\n    };\n    TextToCode[provinceText][provinceData[prop]][ALL_TEXT] = {\n      code: \"\"\n    };\n  });\n\n  if (provinceChildren.length) {\n    item.children = provinceChildren;\n  }\n});\nprovinceAndCityData = cloneDeep(regionData);\n\n// 计算区\nregionData.forEach((item: ProvinceData) => {\n  const province = item.children;\n  const provinceText = item.label;\n\n  if (province) {\n    province.forEach(pItem => {\n      const cityCode = pItem.value;\n      const cityText = pItem.label;\n      const cityChildren = [];\n      const cityData = REGION_DATA[cityCode] ?? {};\n\n      Object.keys(cityData).forEach(prop => {\n        cityChildren.push({\n          value: prop,\n          label: cityData[prop]\n        });\n        CodeToText[prop] = cityData[prop];\n        TextToCode[provinceText][cityText][cityData[prop]] = {\n          code: prop\n        };\n      });\n\n      if (cityChildren.length) {\n        pItem.children = cityChildren;\n      }\n    });\n  }\n});\n\n// 添加“全部”选项\nconst provinceAndCityDataPlus = cloneDeep(provinceAndCityData);\nprovinceAndCityDataPlus.unshift({\n  value: \"\",\n  label: ALL_TEXT\n});\nprovinceAndCityDataPlus.forEach((item: ProvinceData) => {\n  const province = item.children;\n\n  if (province?.length) {\n    province.unshift({\n      value: \"\",\n      label: ALL_TEXT\n    });\n\n    province.forEach(pItem => {\n      const city = pItem.children;\n\n      if (city?.length) {\n        city.unshift({\n          value: \"\",\n          label: ALL_TEXT\n        });\n      }\n    });\n  }\n});\n\nconst regionDataPlus = cloneDeep(regionData);\nregionDataPlus.unshift({\n  value: \"\",\n  label: ALL_TEXT\n});\nregionDataPlus.forEach((item: ProvinceData) => {\n  const province = item.children;\n\n  if (province?.length) {\n    province.unshift({\n      value: \"\",\n      label: ALL_TEXT\n    });\n    province.forEach(pItem => {\n      const city = pItem.children;\n\n      if (city?.length) {\n        city.unshift({\n          value: \"\",\n          label: ALL_TEXT\n        });\n      }\n    });\n  }\n});\n\n/**\n * 汉字转区域码\n * @param provinceText 省\n * @param cityText 市\n * @param regionText 区\n * @returns\n */\nfunction convertTextToCode(\n  provinceText: string,\n  cityText: string,\n  regionText?: string\n): string {\n  let code = \"\";\n  if (provinceText && TextToCode[provinceText]) {\n    const province = TextToCode[provinceText];\n    code = province.code;\n\n    if (cityText && province[cityText]) {\n      const city = province[cityText];\n      code = `${code}${cityText === ALL_TEXT ? \"\" : \", \"}${city.code}`;\n\n      if (regionText && city[regionText]) {\n        code = `${code}${regionText === ALL_TEXT ? \"\" : \", \"}${\n          city[regionText].code\n        }`;\n      }\n    }\n  }\n  return code;\n}\nexport {\n  provinceAndCityData,\n  regionData,\n  provinceAndCityDataPlus,\n  regionDataPlus,\n  CodeToText,\n  TextToCode,\n  convertTextToCode\n};\n","<script setup lang=\"ts\">\nimport {\n  provinceAndCityDataPlus,\n  provinceAndCityData,\n  convertTextToCode,\n  regionDataPlus,\n  regionData,\n  CodeToText\n} from \"@/utils/chinaArea\";\nimport { ref } from \"vue\";\n\ndefineOptions({\n  name: \"Cascader\"\n});\n\nconst selectedOptions1 = ref([\"110000\", \"110100\"]);\nconst selectedOptions2 = ref([\"120000\", \"120100\", \"120101\"]);\nconst selectedOptions3 = ref([\"130000\", \"\"]);\nconst selectedOptions4 = ref([\"120000\", \"120100\", \"\"]);\n\nconst handleChange = value => {\n  console.log(value);\n};\n</script>\n\n<template>\n  <el-card shadow=\"never\">\n    <template #header> 区域级联选择器 </template>\n    <el-row :gutter=\"20\">\n      <el-col :xl=\"12\" :lg=\"12\" :md=\"24\" :sm=\"24\" :xs=\"24\">\n        <div class=\"flex flex-col items-center justify-center\">\n          <span class=\"imp\">\n            1. 二级联动（不带“全部”选项）\n            <el-cascader\n              :options=\"provinceAndCityData\"\n              v-model=\"selectedOptions1\"\n              @change=\"handleChange\"\n            />\n          </span>\n          <div class=\"leading-10\">\n            <div>绑定值：{{ selectedOptions1 }}</div>\n            <div>\n              区域码转汉字：\n              {{ CodeToText[selectedOptions1[0]] }},\n              {{ CodeToText[selectedOptions1[1]] }}\n            </div>\n            <div>\n              汉字转区域码：\n              {{\n                convertTextToCode(\n                  CodeToText[selectedOptions1[0]],\n                  CodeToText[selectedOptions1[1]]\n                )\n              }}\n            </div>\n          </div>\n        </div>\n      </el-col>\n      <el-col :xl=\"12\" :lg=\"12\" :md=\"24\" :sm=\"24\" :xs=\"24\">\n        <div class=\"flex flex-col items-center justify-center mt-3\">\n          <span class=\"imp\">\n            2. 二级联动（带有“全部”选项）\n            <el-cascader\n              :options=\"provinceAndCityDataPlus\"\n              v-model=\"selectedOptions3\"\n              @change=\"handleChange\"\n            />\n          </span>\n          <div class=\"leading-10\">\n            <div>绑定值：{{ selectedOptions3 }}</div>\n            <div>\n              区域码转汉字：\n              {{ CodeToText[selectedOptions3[0]] }},\n              {{ CodeToText[selectedOptions3[1]] }}\n            </div>\n            <div>\n              汉字转区域码：\n              {{\n                convertTextToCode(\n                  CodeToText[selectedOptions3[0]],\n                  CodeToText[selectedOptions3[1]]\n                )\n              }}\n            </div>\n          </div>\n        </div>\n      </el-col>\n      <el-col :xl=\"12\" :lg=\"12\" :md=\"24\" :sm=\"24\" :xs=\"24\">\n        <div class=\"flex flex-col items-center justify-center mt-3\">\n          <span class=\"imp\">\n            3. 三级联动（不带“全部”选项）\n            <el-cascader\n              :options=\"regionData\"\n              v-model=\"selectedOptions2\"\n              @change=\"handleChange\"\n            />\n          </span>\n          <div class=\"leading-10\">\n            <div>绑定值：{{ selectedOptions2 }}</div>\n            <div>\n              区域码转汉字：\n              {{ CodeToText[selectedOptions2[0]] }},\n              {{ CodeToText[selectedOptions2[1]] }},\n              {{ CodeToText[selectedOptions2[2]] }}\n            </div>\n            <div>\n              汉字转区域码：\n              {{\n                convertTextToCode(\n                  CodeToText[selectedOptions2[0]],\n                  CodeToText[selectedOptions2[1]],\n                  CodeToText[selectedOptions2[2]]\n                )\n              }}\n            </div>\n          </div>\n        </div>\n      </el-col>\n      <el-col :xl=\"12\" :lg=\"12\" :md=\"24\" :sm=\"24\" :xs=\"24\">\n        <div class=\"flex flex-col items-center justify-center mt-3\">\n          <span class=\"imp\">\n            4. 三级联动（带\"全部选项\"）\n            <el-cascader\n              :options=\"regionDataPlus\"\n              v-model=\"selectedOptions4\"\n              @change=\"handleChange\"\n            />\n          </span>\n          <div class=\"leading-10\">\n            <div>绑定值：{{ selectedOptions4 }}</div>\n            <div>\n              区域码转汉字：\n              {{ CodeToText[selectedOptions4[0]] }},\n              {{ CodeToText[selectedOptions4[1]] }},\n              {{ CodeToText[selectedOptions4[2]] }}\n            </div>\n            <div>\n              汉字转区域码：\n              {{\n                convertTextToCode(\n                  CodeToText[selectedOptions4[0]],\n                  CodeToText[selectedOptions4[1]],\n                  CodeToText[selectedOptions4[2]]\n                )\n              }}\n            </div>\n          </div>\n        </div>\n      </el-col>\n    </el-row>\n  </el-card>\n</template>\n\n<style scoped lang=\"scss\">\n.imp {\n  color: var(--el-color-primary);\n}\n</style>\n"],"names":["data","require$$0","CodeToText","TextToCode","provinceObject","REGION_DATA","regionData","provinceAndCityData","ALL_TEXT","prop","provinceText","item","provinceCode","provinceChildren","provinceData","cloneDeep","province","pItem","cityCode","cityText","cityChildren","cityData","provinceAndCityDataPlus","city","regionDataPlus","convertTextToCode","regionText","code","selectedOptions1","ref","selectedOptions2","selectedOptions3","selectedOptions4","handleChange","value","_ctx","_cache","_component_el_cascader","_resolveComponent"],"mappings":"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","x_google_ignoreList":[0]}