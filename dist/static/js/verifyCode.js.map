{"version":3,"file":"verifyCode.js","sources":["../../../src/views/login/utils/rule.ts","../../../src/views/login/utils/verifyCode.ts"],"sourcesContent":["import { reactive } from \"vue\";\nimport { isPhone } from \"@pureadmin/utils\";\nimport type { FormRules } from \"element-plus\";\nimport { $t, transformI18n } from \"@/plugins/i18n\";\nimport { useUserStoreHook } from \"@/store/modules/user\";\n\n/** 6位数字验证码正则 */\nexport const REGEXP_SIX = /^\\d{6}$/;\n\n/** 密码正则（密码格式应为8-18位数字、字母、符号的任意两种组合） */\nexport const REGEXP_PWD =\n  /^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)]|[()])+$)(?!^.*[\\u4E00-\\u9FA5].*$)([^(0-9a-zA-Z)]|[()]|[a-z]|[A-Z]|[0-9]){8,18}$/;\n\n/** 登录校验 */\nconst loginRules = reactive<FormRules>({\n  password: [\n    {\n      validator: (rule, value, callback) => {\n        if (value === \"\") {\n          callback(new Error(transformI18n($t(\"login.passwordReg\"))));\n        } else if (!REGEXP_PWD.test(value)) {\n          callback(new Error(transformI18n($t(\"login.passwordRuleReg\"))));\n        } else {\n          callback();\n        }\n      },\n      trigger: \"blur\"\n    }\n  ],\n  verifyCode: [\n    {\n      validator: (rule, value, callback) => {\n        if (value === \"\") {\n          callback(new Error(transformI18n($t(\"login.verifyCodeReg\"))));\n        } else if (useUserStoreHook().verifyCode !== value) {\n          callback(new Error(transformI18n($t(\"login.verifyCodeCorrectReg\"))));\n        } else {\n          callback();\n        }\n      },\n      trigger: \"blur\"\n    }\n  ]\n});\n\n/** 手机登录校验 */\nconst phoneRules = reactive<FormRules>({\n  phone: [\n    {\n      validator: (rule, value, callback) => {\n        if (value === \"\") {\n          callback(new Error(transformI18n($t(\"login.phoneReg\"))));\n        } else if (!isPhone(value)) {\n          callback(new Error(transformI18n($t(\"login.phoneCorrectReg\"))));\n        } else {\n          callback();\n        }\n      },\n      trigger: \"blur\"\n    }\n  ],\n  verifyCode: [\n    {\n      validator: (rule, value, callback) => {\n        if (value === \"\") {\n          callback(new Error(transformI18n($t(\"login.verifyCodeReg\"))));\n        } else if (!REGEXP_SIX.test(value)) {\n          callback(new Error(transformI18n($t(\"login.verifyCodeSixReg\"))));\n        } else {\n          callback();\n        }\n      },\n      trigger: \"blur\"\n    }\n  ]\n});\n\n/** 忘记密码校验 */\nconst updateRules = reactive<FormRules>({\n  phone: [\n    {\n      validator: (rule, value, callback) => {\n        if (value === \"\") {\n          callback(new Error(transformI18n($t(\"login.phoneReg\"))));\n        } else if (!isPhone(value)) {\n          callback(new Error(transformI18n($t(\"login.phoneCorrectReg\"))));\n        } else {\n          callback();\n        }\n      },\n      trigger: \"blur\"\n    }\n  ],\n  verifyCode: [\n    {\n      validator: (rule, value, callback) => {\n        if (value === \"\") {\n          callback(new Error(transformI18n($t(\"login.verifyCodeReg\"))));\n        } else if (!REGEXP_SIX.test(value)) {\n          callback(new Error(transformI18n($t(\"login.verifyCodeSixReg\"))));\n        } else {\n          callback();\n        }\n      },\n      trigger: \"blur\"\n    }\n  ],\n  password: [\n    {\n      validator: (rule, value, callback) => {\n        if (value === \"\") {\n          callback(new Error(transformI18n($t(\"login.passwordReg\"))));\n        } else if (!REGEXP_PWD.test(value)) {\n          callback(new Error(transformI18n($t(\"login.passwordRuleReg\"))));\n        } else {\n          callback();\n        }\n      },\n      trigger: \"blur\"\n    }\n  ]\n});\n\nexport { loginRules, phoneRules, updateRules };\n","import type { FormInstance, FormItemProp } from \"element-plus\";\nimport { clone } from \"@pureadmin/utils\";\nimport { ref } from \"vue\";\n\nconst isDisabled = ref(false);\nconst timer = ref(null);\nconst text = ref(\"\");\n\nexport const useVerifyCode = () => {\n  const start = async (\n    formEl: FormInstance | undefined,\n    props: FormItemProp,\n    time = 60\n  ) => {\n    if (!formEl) return;\n    const initTime = clone(time, true);\n    await formEl.validateField(props, isValid => {\n      if (isValid) {\n        clearInterval(timer.value);\n        isDisabled.value = true;\n        text.value = `${time}`;\n        timer.value = setInterval(() => {\n          if (time > 0) {\n            time -= 1;\n            text.value = `${time}`;\n          } else {\n            text.value = \"\";\n            isDisabled.value = false;\n            clearInterval(timer.value);\n            time = initTime;\n          }\n        }, 1000);\n      }\n    });\n  };\n\n  const end = () => {\n    text.value = \"\";\n    isDisabled.value = false;\n    clearInterval(timer.value);\n  };\n\n  return {\n    isDisabled,\n    timer,\n    text,\n    start,\n    end\n  };\n};\n"],"names":["REGEXP_SIX","REGEXP_PWD","loginRules","reactive","rule","value","callback","transformI18n","$t","useUserStoreHook","phoneRules","isPhone","updateRules","isDisabled","ref","timer","text","useVerifyCode","formEl","props","time","initTime","clone","isValid"],"mappings":"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"}