{"version":3,"file":"phone.vue_vue_type_script_setup_true_lang.js","sources":["../../../src/views/login/components/phone.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useI18n } from \"vue-i18n\";\nimport { ref, reactive } from \"vue\";\nimport Motion from \"../utils/motion\";\nimport { message } from \"@/utils/message\";\nimport { phoneRules } from \"../utils/rule\";\nimport type { FormInstance } from \"element-plus\";\nimport { $t, transformI18n } from \"@/plugins/i18n\";\nimport { useVerifyCode } from \"../utils/verifyCode\";\nimport { useUserStoreHook } from \"@/store/modules/user\";\nimport { useRenderIcon } from \"@/components/ReIcon/src/hooks\";\nimport Iphone from \"@iconify-icons/ep/iphone\";\n\nconst { t } = useI18n();\nconst loading = ref(false);\nconst ruleForm = reactive({\n  phone: \"\",\n  verifyCode: \"\"\n});\nconst ruleFormRef = ref<FormInstance>();\nconst { isDisabled, text } = useVerifyCode();\n\nconst onLogin = async (formEl: FormInstance | undefined) => {\n  loading.value = true;\n  if (!formEl) return;\n  await formEl.validate((valid, fields) => {\n    if (valid) {\n      // 模拟登录请求，需根据实际开发进行修改\n      setTimeout(() => {\n        message(transformI18n($t(\"login.loginSuccess\")), { type: \"success\" });\n        loading.value = false;\n      }, 2000);\n    } else {\n      loading.value = false;\n      return fields;\n    }\n  });\n};\n\nfunction onBack() {\n  useVerifyCode().end();\n  useUserStoreHook().SET_CURRENTPAGE(0);\n}\n</script>\n\n<template>\n  <el-form ref=\"ruleFormRef\" :model=\"ruleForm\" :rules=\"phoneRules\" size=\"large\">\n    <Motion>\n      <el-form-item prop=\"phone\">\n        <el-input\n          clearable\n          v-model=\"ruleForm.phone\"\n          :placeholder=\"t('login.phone')\"\n          :prefix-icon=\"useRenderIcon(Iphone)\"\n        />\n      </el-form-item>\n    </Motion>\n\n    <Motion :delay=\"100\">\n      <el-form-item prop=\"verifyCode\">\n        <div class=\"w-full flex justify-between\">\n          <el-input\n            clearable\n            v-model=\"ruleForm.verifyCode\"\n            :placeholder=\"t('login.smsVerifyCode')\"\n            :prefix-icon=\"useRenderIcon('ri:shield-keyhole-line')\"\n          />\n          <el-button\n            :disabled=\"isDisabled\"\n            class=\"ml-2\"\n            @click=\"useVerifyCode().start(ruleFormRef, 'phone')\"\n          >\n            {{\n              text.length > 0\n                ? text + t(\"login.info\")\n                : t(\"login.getVerifyCode\")\n            }}\n          </el-button>\n        </div>\n      </el-form-item>\n    </Motion>\n\n    <Motion :delay=\"150\">\n      <el-form-item>\n        <el-button\n          class=\"w-full\"\n          size=\"default\"\n          type=\"primary\"\n          :loading=\"loading\"\n          @click=\"onLogin(ruleFormRef)\"\n        >\n          {{ t(\"login.login\") }}\n        </el-button>\n      </el-form-item>\n    </Motion>\n\n    <Motion :delay=\"200\">\n      <el-form-item>\n        <el-button class=\"w-full\" size=\"default\" @click=\"onBack\">\n          {{ t(\"login.back\") }}\n        </el-button>\n      </el-form-item>\n    </Motion>\n  </el-form>\n</template>\n"],"names":["t","useI18n","loading","ref","ruleForm","reactive","ruleFormRef","isDisabled","text","useVerifyCode","onLogin","formEl","valid","fields","message","transformI18n","$t","onBack","useUserStoreHook"],"mappings":"wWAaM,KAAA,CAAE,EAAAA,GAAMC,IACRC,EAAUC,EAAI,EAAK,EACnBC,EAAWC,EAAS,CACxB,MAAO,GACP,WAAY,EAAA,CACb,EACKC,EAAcH,IACd,CAAE,WAAAI,EAAY,KAAAC,CAAK,EAAIC,EAAc,EAErCC,EAAU,MAAOC,GAAqC,CAC1DT,EAAQ,MAAQ,GACXS,GACL,MAAMA,EAAO,SAAS,CAACC,EAAOC,IAAW,CACvC,GAAID,EAEF,WAAW,IAAM,CACPE,EAAAC,EAAcC,EAAG,oBAAoB,CAAC,EAAG,CAAE,KAAM,UAAW,EACpEd,EAAQ,MAAQ,IACf,GAAI,MAEP,QAAAA,EAAQ,MAAQ,GACTW,CACT,CACD,CAAA,EAGH,SAASI,GAAS,CAChBR,EAAA,EAAgB,MACCS,EAAA,EAAE,gBAAgB,CAAC,CACtC"}