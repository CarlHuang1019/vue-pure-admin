{"version":3,"file":"sensitive.js","sources":["../../../node_modules/.pnpm/mint-filter@4.0.3/node_modules/mint-filter/dist/module/node.js","../../../node_modules/.pnpm/mint-filter@4.0.3/node_modules/mint-filter/dist/module/index.js","../../../src/views/able/sensitive.vue"],"sourcesContent":["export default class Node {\n    depth = 0;\n    key;\n    word = false;\n    children = {};\n    fail;\n    count = 0;\n    constructor(key, depth = 0) {\n        this.key = key;\n        this.depth = depth;\n    }\n}\n","import Node from './node';\nexport class Mint {\n    root = new Node('root');\n    customCharacter;\n    constructor(keys, ops) {\n        const len = keys.length;\n        this.customCharacter = ops?.customCharacter || '*';\n        for (let idx = 0; idx < len; idx++) {\n            this.add(keys[idx], false);\n        }\n        this.build();\n    }\n    build() {\n        const queue = [];\n        queue.push(this.root);\n        let idx = 0;\n        while (queue.length > idx) {\n            const beginNode = queue[idx];\n            const map = beginNode.children;\n            for (const key in beginNode.children) {\n                const node = map[key];\n                let failNode = beginNode.fail;\n                while (failNode && !failNode.children[key]) {\n                    failNode = failNode.fail;\n                }\n                node.fail = failNode?.children[key] || this.root;\n                queue.push(node);\n            }\n            idx++;\n        }\n    }\n    search(text, options = {\n        replace: true,\n    }) {\n        let node = this.root;\n        const fText = [];\n        const oText = [];\n        const words = [];\n        const { replace = true, verify = false } = options;\n        const textLen = text.length;\n        for (let i = 0; i < textLen; i++) {\n            const oKey = text[i];\n            const key = oKey.toLowerCase();\n            while (node && !node?.children[key]) {\n                node = node?.fail;\n            }\n            node = node?.children[key] || this.root;\n            fText.push(oKey);\n            oText.push(oKey);\n            if (node.word) {\n                let idx = i + 1 - node.depth;\n                let word = '';\n                while (idx <= i) {\n                    const v = oText[idx];\n                    word += v;\n                    if (replace) {\n                        fText[idx] = this.customCharacter;\n                    }\n                    idx++;\n                }\n                words.push(word);\n                if (verify) {\n                    break;\n                }\n            }\n        }\n        return {\n            words,\n            text: fText.join(''),\n        };\n    }\n    filter(text, options) {\n        return this.search(text, options);\n    }\n    verify(text) {\n        const { words } = this.search(text, { verify: true });\n        return !words.length;\n    }\n    delete(key) {\n        const type = this.pop(key.toLowerCase(), key.length, this.root);\n        this.build();\n        return type;\n    }\n    pop(key, len, node, carry = 'delete', idx = 0) {\n        if (!node) {\n            return 'delete';\n        }\n        if (idx === len) {\n            node.word = false;\n            node.count--;\n            let isDel = true;\n            for (const k in node.children) {\n                if (k) {\n                    isDel = false;\n                    break;\n                }\n            }\n            return isDel ? carry : 'update';\n        }\n        else {\n            const val = key[idx];\n            const next = node.children[val];\n            const type = this.pop(key, len, next, node.word ? 'update' : carry, idx + 1);\n            node.count--;\n            if (type === 'delete' && next?.count === 0) {\n                delete node.children[val];\n            }\n            return type;\n        }\n    }\n    add(key, build = true) {\n        const lowKey = key.toLowerCase();\n        const len = lowKey.length;\n        this.put(lowKey, len);\n        if (build) {\n            this.build();\n        }\n        return true;\n    }\n    put(key, len) {\n        let node = this.root;\n        const lastIdx = len - 1;\n        node.count++;\n        for (let idx = 0; idx < len; idx++) {\n            const val = key[idx];\n            const nextNode = node.children[val];\n            if (nextNode) {\n                nextNode.count++;\n                node = nextNode;\n            }\n            else {\n                const newNode = new Node(val, idx + 1);\n                newNode.count = 1;\n                node.children[val] = newNode;\n                node = newNode;\n            }\n            if (lastIdx === idx && node.depth) {\n                node.word = true;\n            }\n        }\n    }\n}\nexport default Mint;\n","<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport Mint from \"mint-filter\";\n\ndefineOptions({\n  name: \"Sensitive\"\n});\n\n// 自定义敏感词字典\nconst words = [\"脑残\", \"废物\", \"白痴\", \"三八\", \"智障\"];\n\nconst modelValue = ref();\nconst mint = new Mint(words);\n\nfunction onInput() {\n  modelValue.value = mint.filter(modelValue.value).text;\n}\n</script>\n\n<template>\n  <el-card shadow=\"never\">\n    <template #header>\n      <div class=\"card-header\">\n        <span class=\"font-medium\">敏感词过滤</span>\n      </div>\n    </template>\n    <div class=\"flex flex-wrap gap-2 my-2\">\n      <span>自定义敏感词</span>\n      <el-tag\n        v-for=\"(word, index) in words\"\n        :key=\"index\"\n        type=\"danger\"\n        class=\"mx-1\"\n        effect=\"dark\"\n        round\n      >\n        {{ word }}\n      </el-tag>\n    </div>\n    <el-input v-model=\"modelValue\" @input=\"onInput\" />\n    <p class=\"mt-2\">{{ modelValue }}</p>\n  </el-card>\n</template>\n"],"names":["Node","key","depth","__publicField","Mint","keys","ops","len","idx","queue","beginNode","map","node","failNode","text","options","fText","oText","words","replace","verify","textLen","i","oKey","word","v","type","carry","isDel","k","val","next","build","lowKey","lastIdx","nextNode","newNode","Mint$1","modelValue","ref","mint","onInput"],"mappings":"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","x_google_ignoreList":[0,1]}