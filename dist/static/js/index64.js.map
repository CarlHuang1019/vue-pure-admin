{"version":3,"file":"index64.js","sources":["../../../node_modules/.pnpm/typeit@8.7.1/node_modules/typeit/dist/index.es.js","../../../src/components/ReTypeit/index.ts"],"sourcesContent":["// TypeIt by Alex MacArthur - https://typeitjs.com\nconst isArray = (thing) => Array.isArray(thing);\nconst asArray = (value) => {\n  return isArray(value) ? value : [value];\n};\nlet Queue = function(initialItems) {\n  let add = function(steps) {\n    asArray(steps).forEach((step) => {\n      return _q.set(Symbol(step.char?.innerText), buildQueueItem({ ...step }));\n    });\n    return this;\n  };\n  let getTypeable = () => rawValues().filter((value) => value.typeable);\n  let set = function(index, item) {\n    let keys = [..._q.keys()];\n    _q.set(keys[index], buildQueueItem(item));\n  };\n  let buildQueueItem = (queueItem) => {\n    queueItem.shouldPauseCursor = function() {\n      return Boolean(this.typeable || this.cursorable || this.deletable);\n    };\n    return queueItem;\n  };\n  let reset = function() {\n    _q.forEach((item) => delete item.done);\n  };\n  let wipe = function() {\n    _q = /* @__PURE__ */ new Map();\n    add(initialItems);\n  };\n  let getQueue = () => _q;\n  let rawValues = () => Array.from(_q.values());\n  let destroy = (key) => _q.delete(key);\n  let getItems = (all = false) => all ? rawValues() : rawValues().filter((i) => !i.done);\n  let done = (key, shouldDestroy = false) => shouldDestroy ? _q.delete(key) : _q.get(key).done = true;\n  let _q = /* @__PURE__ */ new Map();\n  add(initialItems);\n  return {\n    add,\n    set,\n    wipe,\n    reset,\n    destroy,\n    done,\n    getItems,\n    getQueue,\n    getTypeable\n  };\n};\nconst toArray = (val) => Array.from(val);\nconst createTextNode = (content) => document.createTextNode(content);\nlet expandTextNodes = (element) => {\n  [...element.childNodes].forEach((child) => {\n    if (child.nodeValue) {\n      [...child.nodeValue].forEach((c) => {\n        child.parentNode.insertBefore(createTextNode(c), child);\n      });\n      child.remove();\n      return;\n    }\n    expandTextNodes(child);\n  });\n  return element;\n};\nconst getParsedBody = (content) => {\n  let doc = document.implementation.createHTMLDocument();\n  doc.body.innerHTML = content;\n  return expandTextNodes(doc.body);\n};\nconst DATA_ATTRIBUTE = \"data-typeit-id\";\nconst CURSOR_CLASS = \"ti-cursor\";\nconst END = \"END\";\nconst DEFAULT_STATUSES = {\n  started: false,\n  completed: false,\n  frozen: false,\n  destroyed: false\n};\nconst DEFAULT_OPTIONS = {\n  breakLines: true,\n  cursor: {\n    autoPause: true,\n    autoPauseDelay: 500,\n    animation: {\n      frames: [0, 0, 1].map((n) => {\n        return { opacity: n };\n      }),\n      options: {\n        iterations: Infinity,\n        easing: \"steps(2, start)\",\n        fill: \"forwards\"\n      }\n    }\n  },\n  cursorChar: \"|\",\n  cursorSpeed: 1e3,\n  deleteSpeed: null,\n  html: true,\n  lifeLike: true,\n  loop: false,\n  loopDelay: 750,\n  nextStringDelay: 750,\n  speed: 100,\n  startDelay: 250,\n  startDelete: false,\n  strings: [],\n  waitUntilVisible: false,\n  beforeString: () => {\n  },\n  afterString: () => {\n  },\n  beforeStep: () => {\n  },\n  afterStep: () => {\n  },\n  afterComplete: () => {\n  }\n};\nconst PLACEHOLDER_CSS = `[${DATA_ATTRIBUTE}]:before {content: '.'; display: inline-block; width: 0; visibility: hidden;}`;\nfunction walkElementNodes(element, shouldReverse = false, shouldIncludeCursor = false) {\n  let cursor = element.querySelector(`.${CURSOR_CLASS}`);\n  let walker = document.createTreeWalker(element, NodeFilter.SHOW_ALL, {\n    acceptNode: (node) => {\n      if (cursor && shouldIncludeCursor) {\n        if (node.classList?.contains(CURSOR_CLASS)) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n        if (cursor.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n      }\n      return node.classList?.contains(CURSOR_CLASS) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;\n    }\n  });\n  let nextNode;\n  let nodes = [];\n  while (nextNode = walker.nextNode()) {\n    if (!nextNode.originalParent) {\n      nextNode.originalParent = nextNode.parentNode;\n    }\n    nodes.push(nextNode);\n  }\n  return shouldReverse ? nodes.reverse() : nodes;\n}\nfunction chunkStringAsHtml(string) {\n  return walkElementNodes(getParsedBody(string));\n}\nfunction maybeChunkStringAsHtml(str, asHtml = true) {\n  return asHtml ? chunkStringAsHtml(str) : toArray(str).map(createTextNode);\n}\nconst createElement = (el) => document.createElement(el);\nconst appendStyleBlock = (styles, id = \"\") => {\n  let styleBlock = createElement(\"style\");\n  styleBlock.id = id;\n  styleBlock.appendChild(createTextNode(styles));\n  document.head.appendChild(styleBlock);\n};\nconst calculateDelay = (delayArg) => {\n  if (!isArray(delayArg)) {\n    delayArg = [delayArg / 2, delayArg / 2];\n  }\n  return delayArg;\n};\nconst randomInRange = (value, range2) => {\n  return Math.abs(\n    Math.random() * (value + range2 - (value - range2)) + (value - range2)\n  );\n};\nlet range = (val) => val / 2;\nfunction calculatePace(options) {\n  let { speed, deleteSpeed, lifeLike } = options;\n  deleteSpeed = deleteSpeed !== null ? deleteSpeed : speed / 3;\n  return lifeLike ? [\n    randomInRange(speed, range(speed)),\n    randomInRange(deleteSpeed, range(deleteSpeed))\n  ] : [speed, deleteSpeed];\n}\nconst destroyTimeouts = (timeouts) => {\n  timeouts.forEach(clearTimeout);\n  return [];\n};\nconst generateHash = () => Math.random().toString().substring(2, 9);\nconst isInput = (el) => \"value\" in el;\nlet getAllChars = (element) => {\n  if (isInput(element)) {\n    return toArray(element.value);\n  }\n  return walkElementNodes(element, true).filter(\n    (c) => !(c.childNodes.length > 0)\n  );\n};\nconst fireWhenVisible = (element, func) => {\n  let observer = new IntersectionObserver(\n    (entries, observer2) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          func();\n          observer2.unobserve(element);\n        }\n      });\n    },\n    { threshold: 1 }\n  );\n  observer.observe(element);\n};\nlet handleFunctionalArg = (arg) => {\n  return typeof arg === \"function\" ? arg() : arg;\n};\nconst isNumber = (value) => Number.isInteger(value);\nlet select = (selector, element = document, all = false) => {\n  return element[`querySelector${all ? \"All\" : \"\"}`](selector);\n};\nlet isBodyElement = (node) => /body/i.test(node?.tagName);\nlet insertIntoElement = (originalTarget, character) => {\n  if (isInput(originalTarget)) {\n    originalTarget.value = `${originalTarget.value}${character.textContent}`;\n    return;\n  }\n  character.innerHTML = \"\";\n  let target = isBodyElement(character.originalParent) ? originalTarget : character.originalParent || originalTarget;\n  target.insertBefore(\n    character,\n    select(\".\" + CURSOR_CLASS, target) || null\n  );\n};\nlet updateCursorPosition = (steps, cursorPosition, printedCharacters) => {\n  return Math.min(\n    Math.max(cursorPosition + steps, 0),\n    printedCharacters.length\n  );\n};\nconst merge = (originalObj, newObj) => Object.assign({}, originalObj, newObj);\nconst removeNode = (node, rootElement) => {\n  if (!node)\n    return;\n  let nodeParent = node.parentNode;\n  let nodeToRemove = nodeParent.childNodes.length > 1 || nodeParent.isSameNode(rootElement) ? node : nodeParent;\n  nodeToRemove.remove();\n};\nconst repositionCursor = (element, allChars, newCursorPosition) => {\n  let nodeToInsertBefore = allChars[newCursorPosition - 1];\n  let cursor = select(`.${CURSOR_CLASS}`, element);\n  element = nodeToInsertBefore?.parentNode || element;\n  element.insertBefore(cursor, nodeToInsertBefore || null);\n};\nfunction selectorToElement(thing) {\n  return typeof thing === \"string\" ? select(thing) : thing;\n}\nconst isNonVoidElement = (el) => /<(.+)>(.*?)<\\/(.+)>/.test(el.outerHTML);\nlet wait = (callback, delay, timeouts) => {\n  return new Promise((resolve) => {\n    let cb = async () => {\n      await callback();\n      resolve();\n    };\n    timeouts.push(setTimeout(cb, delay || 0));\n  });\n};\nlet cursorFontStyles = {\n  \"font-family\": \"\",\n  \"font-weight\": \"\",\n  \"font-size\": \"\",\n  \"font-style\": \"\",\n  \"line-height\": \"\",\n  color: \"\",\n  transform: \"translateX(-.125em)\"\n};\nlet setCursorStyles = (id, element) => {\n  let rootSelector = `[${DATA_ATTRIBUTE}='${id}']`;\n  let cursorSelector = `${rootSelector} .${CURSOR_CLASS}`;\n  let computedStyles = getComputedStyle(element);\n  let customProperties = Object.entries(cursorFontStyles).reduce(\n    (accumulator, [item, value]) => {\n      return `${accumulator} ${item}: var(--ti-cursor-${item}, ${value || computedStyles[item]});`;\n    },\n    \"\"\n  );\n  appendStyleBlock(\n    `${cursorSelector} { display: inline-block; width: 0; ${customProperties} }`,\n    id\n  );\n};\nconst duplicate = (value, times) => new Array(times).fill(value);\nconst countStepsToSelector = ({\n  queueItems,\n  selector,\n  cursorPosition,\n  to\n}) => {\n  if (isNumber(selector)) {\n    return selector * -1;\n  }\n  let isMovingToEnd = new RegExp(END, \"i\").test(to);\n  let selectorIndex = selector ? [...queueItems].reverse().findIndex(({ char }) => {\n    let parentElement = char.parentElement;\n    let parentMatches = parentElement.matches(selector);\n    if (isMovingToEnd && parentMatches) {\n      return true;\n    }\n    return parentMatches && parentElement.firstChild.isSameNode(char);\n  }) : -1;\n  if (selectorIndex < 0) {\n    selectorIndex = isMovingToEnd ? 0 : queueItems.length - 1;\n  }\n  let offset = isMovingToEnd ? 0 : 1;\n  return selectorIndex - cursorPosition + offset;\n};\nlet beforePaint = (cb) => {\n  return new Promise((resolve) => {\n    requestAnimationFrame(async () => {\n      resolve(await cb());\n    });\n  });\n};\nlet getAnimationFromElement = (element) => {\n  return element?.getAnimations().find((animation) => {\n    return animation.id === element.dataset.tiAnimationId;\n  });\n};\nlet setCursorAnimation = ({\n  cursor,\n  frames,\n  options\n}) => {\n  let animation = cursor.animate(frames, options);\n  animation.pause();\n  animation.id = cursor.dataset.tiAnimationId;\n  beforePaint(() => {\n    beforePaint(() => {\n      animation.play();\n    });\n  });\n  return animation;\n};\nlet rebuildCursorAnimation = ({\n  cursor,\n  options,\n  cursorOptions\n}) => {\n  if (!cursor || !cursorOptions)\n    return;\n  let animation = getAnimationFromElement(cursor);\n  let oldCurrentTime;\n  if (animation) {\n    options.delay = animation.effect.getComputedTiming().delay;\n    oldCurrentTime = animation.currentTime;\n    animation.cancel();\n  }\n  let newAnimation = setCursorAnimation({\n    cursor,\n    frames: cursorOptions.animation.frames,\n    options\n  });\n  if (oldCurrentTime) {\n    newAnimation.currentTime = oldCurrentTime;\n  }\n  return newAnimation;\n};\nlet execute = (queueItem) => queueItem.func?.call(null);\nlet fireItem = async ({\n  index,\n  queueItems,\n  wait: wait2,\n  cursor,\n  cursorOptions\n}) => {\n  let queueItem = queueItems[index][1];\n  let instantQueue = [];\n  let tempIndex = index;\n  let futureItem = queueItem;\n  let shouldBeGrouped = () => futureItem && !futureItem.delay;\n  let shouldPauseCursor = queueItem.shouldPauseCursor() && cursorOptions.autoPause;\n  while (shouldBeGrouped()) {\n    instantQueue.push(futureItem);\n    shouldBeGrouped() && tempIndex++;\n    futureItem = queueItems[tempIndex] ? queueItems[tempIndex][1] : null;\n  }\n  if (instantQueue.length) {\n    await beforePaint(async () => {\n      for (let q of instantQueue) {\n        await execute(q);\n      }\n    });\n    return tempIndex - 1;\n  }\n  let animation = getAnimationFromElement(cursor);\n  let options;\n  if (animation) {\n    options = {\n      ...animation.effect.getComputedTiming(),\n      delay: shouldPauseCursor ? cursorOptions.autoPauseDelay : 0\n    };\n  }\n  await wait2(async () => {\n    if (animation && shouldPauseCursor) {\n      animation.cancel();\n    }\n    await beforePaint(() => {\n      execute(queueItem);\n    });\n  }, queueItem.delay);\n  await rebuildCursorAnimation({\n    cursor,\n    options,\n    cursorOptions\n  });\n  return index;\n};\nlet processCursorOptions = (cursorOptions) => {\n  if (typeof cursorOptions === \"object\") {\n    let newOptions = {};\n    let { frames: defaultFrames, options: defaultOptions } = DEFAULT_OPTIONS.cursor.animation;\n    newOptions.animation = cursorOptions.animation || {};\n    newOptions.animation.frames = cursorOptions.animation?.frames || defaultFrames;\n    newOptions.animation.options = merge(\n      defaultOptions,\n      cursorOptions.animation?.options || {}\n    );\n    newOptions.autoPause = cursorOptions.autoPause ?? DEFAULT_OPTIONS.cursor.autoPause;\n    newOptions.autoPauseDelay = cursorOptions.autoPauseDelay || DEFAULT_OPTIONS.cursor.autoPauseDelay;\n    return newOptions;\n  }\n  if (cursorOptions === true) {\n    return DEFAULT_OPTIONS.cursor;\n  }\n  return cursorOptions;\n};\nconst TypeIt = function(element, options = {}) {\n  let _wait = async (callback, delay, silent = false) => {\n    if (_statuses.frozen) {\n      await new Promise((resolve) => {\n        this.unfreeze = () => {\n          _statuses.frozen = false;\n          resolve();\n        };\n      });\n    }\n    silent || await _opts.beforeStep(this);\n    await wait(callback, delay, _timeouts);\n    silent || await _opts.afterStep(this);\n  };\n  let _fireItemWithContext = (index, queueItems) => {\n    return fireItem({\n      index,\n      queueItems,\n      wait: _wait,\n      cursor: _cursor,\n      cursorOptions: _opts.cursor\n    });\n  };\n  let _removeNode = (node) => removeNode(node, _element);\n  let _elementIsInput = () => isInput(_element);\n  let _getPace = (index = 0) => calculatePace(_opts)[index];\n  let _getAllChars = () => getAllChars(_element);\n  let _maybeAppendPause = (opts = {}) => {\n    let delay = opts.delay;\n    delay && _queue.add({ delay });\n  };\n  let _queueAndReturn = (steps, opts) => {\n    _queue.add(steps);\n    _maybeAppendPause(opts);\n    return this;\n  };\n  let _getDerivedCursorPosition = () => _predictedCursorPosition ?? _cursorPosition;\n  let _generateTemporaryOptionQueueItems = (newOptions = {}) => {\n    return [\n      { func: () => _options(newOptions) },\n      { func: () => _options(_opts) }\n    ];\n  };\n  let _addSplitPause = (items) => {\n    let delay = _opts.nextStringDelay;\n    _queue.add([{ delay: delay[0] }, ...items, { delay: delay[1] }]);\n  };\n  let _setUpCursor = () => {\n    if (_elementIsInput()) {\n      return;\n    }\n    let cursor = createElement(\"span\");\n    cursor.className = CURSOR_CLASS;\n    if (!_shouldRenderCursor) {\n      cursor.style.visibility = \"hidden\";\n      return cursor;\n    }\n    cursor.innerHTML = getParsedBody(_opts.cursorChar).innerHTML;\n    return cursor;\n  };\n  let _attachCursor = async () => {\n    !_elementIsInput() && _cursor && _element.appendChild(_cursor);\n    if (_shouldRenderCursor) {\n      setCursorStyles(_id, _element);\n      _cursor.dataset.tiAnimationId = _id;\n      let { animation } = _opts.cursor;\n      let { frames, options: options2 } = animation;\n      setCursorAnimation({\n        frames,\n        cursor: _cursor,\n        options: {\n          duration: _opts.cursorSpeed,\n          ...options2\n        }\n      });\n    }\n  };\n  let _generateQueue = () => {\n    let strings = _opts.strings.filter((string) => !!string);\n    strings.forEach((string, index) => {\n      this.type(string);\n      if (index + 1 === strings.length) {\n        return;\n      }\n      let splitItems = _opts.breakLines ? [{ func: () => _type(createElement(\"BR\")), typeable: true }] : duplicate(\n        {\n          func: _delete,\n          delay: _getPace(1)\n        },\n        _queue.getTypeable().length\n      );\n      _addSplitPause(splitItems);\n    });\n  };\n  let _prepLoop = async (delay) => {\n    let derivedCursorPosition = _getDerivedCursorPosition();\n    derivedCursorPosition && await _move({ value: derivedCursorPosition });\n    let queueItems = _getAllChars().map((c) => {\n      return [\n        Symbol(),\n        {\n          func: _delete,\n          delay: _getPace(1),\n          deletable: true,\n          shouldPauseCursor: () => true\n        }\n      ];\n    });\n    for (let index = 0; index < queueItems.length; index++) {\n      await _fireItemWithContext(index, queueItems);\n    }\n    _queue.reset();\n    _queue.set(0, { delay });\n  };\n  let _maybePrependHardcodedStrings = (strings) => {\n    let existingMarkup = _element.innerHTML;\n    if (!existingMarkup) {\n      return strings;\n    }\n    _element.innerHTML = \"\";\n    if (_opts.startDelete) {\n      _element.innerHTML = existingMarkup;\n      expandTextNodes(_element);\n      _addSplitPause(\n        duplicate(\n          {\n            func: _delete,\n            delay: _getPace(1),\n            deletable: true\n          },\n          _getAllChars().length\n        )\n      );\n      return strings;\n    }\n    let hardCodedStrings = existingMarkup.replace(/<!--(.+?)-->/g, \"\").trim().split(/<br(?:\\s*?)(?:\\/)?>/);\n    return hardCodedStrings.concat(strings);\n  };\n  let _fire = async (remember = true) => {\n    _statuses.started = true;\n    let cleanUp = (qKey) => {\n      _queue.done(qKey, !remember);\n    };\n    try {\n      let queueItems = [..._queue.getQueue()];\n      for (let index = 0; index < queueItems.length; index++) {\n        let [queueKey, queueItem] = queueItems[index];\n        if (queueItem.done)\n          continue;\n        if (!queueItem.deletable || queueItem.deletable && _getAllChars().length) {\n          let newIndex = await _fireItemWithContext(index, queueItems);\n          Array(newIndex - index).fill(index + 1).map((x, y) => x + y).forEach((i) => {\n            let [key] = queueItems[i];\n            cleanUp(key);\n          });\n          index = newIndex;\n        }\n        cleanUp(queueKey);\n      }\n      if (!remember) {\n        return this;\n      }\n      _statuses.completed = true;\n      await _opts.afterComplete(this);\n      if (!_opts.loop) {\n        throw \"\";\n      }\n      let delay = _opts.loopDelay;\n      _wait(async () => {\n        await _prepLoop(delay[0]);\n        _fire();\n      }, delay[1]);\n    } catch (e) {\n    }\n    return this;\n  };\n  let _move = async (step) => {\n    _cursorPosition = updateCursorPosition(\n      step,\n      _cursorPosition,\n      _getAllChars()\n    );\n    repositionCursor(_element, _getAllChars(), _cursorPosition);\n  };\n  let _type = (char) => insertIntoElement(_element, char);\n  let _options = async (opts) => _opts = merge(_opts, opts);\n  let _empty = async () => {\n    if (_elementIsInput()) {\n      _element.value = \"\";\n      return;\n    }\n    _getAllChars().forEach(_removeNode);\n    return;\n  };\n  let _delete = () => {\n    let allChars = _getAllChars();\n    if (!allChars.length)\n      return;\n    if (_elementIsInput()) {\n      _element.value = _element.value.slice(0, -1);\n    } else {\n      _removeNode(allChars[_cursorPosition]);\n    }\n  };\n  this.break = function(actionOpts) {\n    return _queueAndReturn(\n      {\n        func: () => _type(createElement(\"BR\")),\n        typeable: true\n      },\n      actionOpts\n    );\n  };\n  this.delete = function(numCharacters = null, actionOpts = {}) {\n    numCharacters = handleFunctionalArg(numCharacters);\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let num = numCharacters;\n    let { instant, to } = actionOpts;\n    let typeableQueueItems = _queue.getTypeable();\n    let rounds = (() => {\n      if (num === null) {\n        return typeableQueueItems.length;\n      }\n      if (isNumber(num)) {\n        return num;\n      }\n      return countStepsToSelector({\n        queueItems: typeableQueueItems,\n        selector: num,\n        cursorPosition: _getDerivedCursorPosition(),\n        to\n      });\n    })();\n    return _queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: _delete,\n            delay: instant ? 0 : _getPace(1),\n            deletable: true\n          },\n          rounds\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  };\n  this.empty = function(actionOpts = {}) {\n    return _queueAndReturn({ func: _empty }, actionOpts);\n  };\n  this.exec = function(func, actionOpts = {}) {\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    return _queueAndReturn(\n      [bookEndQueueItems[0], { func: () => func(this) }, bookEndQueueItems[1]],\n      actionOpts\n    );\n  };\n  this.move = function(movementArg, actionOpts = {}) {\n    movementArg = handleFunctionalArg(movementArg);\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let { instant, to } = actionOpts;\n    let numberOfSteps = countStepsToSelector({\n      queueItems: _queue.getTypeable(),\n      selector: movementArg === null ? \"\" : movementArg,\n      to,\n      cursorPosition: _getDerivedCursorPosition()\n    });\n    let directionalStep = numberOfSteps < 0 ? -1 : 1;\n    _predictedCursorPosition = _getDerivedCursorPosition() + numberOfSteps;\n    return _queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: () => _move(directionalStep),\n            delay: instant ? 0 : _getPace(),\n            cursorable: true\n          },\n          Math.abs(numberOfSteps)\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  };\n  this.options = function(opts, actionOpts = {}) {\n    opts = handleFunctionalArg(opts);\n    _options(opts);\n    return _queueAndReturn({}, actionOpts);\n  };\n  this.pause = function(milliseconds, actionOpts = {}) {\n    return _queueAndReturn(\n      { delay: handleFunctionalArg(milliseconds) },\n      actionOpts\n    );\n  };\n  this.type = function(string, actionOpts = {}) {\n    string = handleFunctionalArg(string);\n    let { instant } = actionOpts;\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let chars = maybeChunkStringAsHtml(string, _opts.html);\n    let charsAsQueueItems = chars.map((char) => {\n      return {\n        func: () => _type(char),\n        char,\n        delay: instant || isNonVoidElement(char) ? 0 : _getPace(),\n        typeable: char.nodeType === Node.TEXT_NODE\n      };\n    });\n    let itemsToQueue = [\n      bookEndQueueItems[0],\n      { func: async () => await _opts.beforeString(string, this) },\n      ...charsAsQueueItems,\n      { func: async () => await _opts.afterString(string, this) },\n      bookEndQueueItems[1]\n    ];\n    return _queueAndReturn(itemsToQueue, actionOpts);\n  };\n  this.is = function(key) {\n    return _statuses[key];\n  };\n  this.destroy = function(shouldRemoveCursor = true) {\n    _timeouts = destroyTimeouts(_timeouts);\n    handleFunctionalArg(shouldRemoveCursor) && _cursor && _removeNode(_cursor);\n    _statuses.destroyed = true;\n  };\n  this.freeze = function() {\n    _statuses.frozen = true;\n  };\n  this.unfreeze = () => {\n  };\n  this.reset = function(rebuild) {\n    !this.is(\"destroyed\") && this.destroy();\n    if (rebuild) {\n      _queue.wipe();\n      rebuild(this);\n    } else {\n      _queue.reset();\n    }\n    _cursorPosition = 0;\n    for (let property in _statuses) {\n      _statuses[property] = false;\n    }\n    _element[_elementIsInput() ? \"value\" : \"innerHTML\"] = \"\";\n    return this;\n  };\n  this.go = function() {\n    if (_statuses.started) {\n      return this;\n    }\n    _attachCursor();\n    if (!_opts.waitUntilVisible) {\n      _fire();\n      return this;\n    }\n    fireWhenVisible(_element, _fire.bind(this));\n    return this;\n  };\n  this.flush = function(cb = () => {\n  }) {\n    _attachCursor();\n    _fire(false).then(cb);\n    return this;\n  };\n  this.getQueue = () => _queue;\n  this.getOptions = () => _opts;\n  this.updateOptions = (options2) => _options(options2);\n  this.getElement = () => _element;\n  let _element = selectorToElement(element);\n  let _timeouts = [];\n  let _cursorPosition = 0;\n  let _predictedCursorPosition = null;\n  let _statuses = merge({}, DEFAULT_STATUSES);\n  options.cursor = processCursorOptions(\n    options.cursor ?? DEFAULT_OPTIONS.cursor\n  );\n  let _opts = merge(DEFAULT_OPTIONS, options);\n  _opts = merge(_opts, {\n    html: !_elementIsInput() && _opts.html,\n    nextStringDelay: calculateDelay(_opts.nextStringDelay),\n    loopDelay: calculateDelay(_opts.loopDelay)\n  });\n  let _id = generateHash();\n  let _queue = Queue([{ delay: _opts.startDelay }]);\n  _element.dataset.typeitId = _id;\n  appendStyleBlock(PLACEHOLDER_CSS);\n  let _shouldRenderCursor = !!_opts.cursor && !_elementIsInput();\n  let _cursor = _setUpCursor();\n  _opts.strings = _maybePrependHardcodedStrings(asArray(_opts.strings));\n  if (_opts.strings.length) {\n    _generateQueue();\n  }\n};\nexport {\n  TypeIt as default\n};\n","import { h, defineComponent } from \"vue\";\nimport TypeIt from \"typeit\";\n\n// 打字机效果组件（只是简单的封装下，更多配置项参考 https://www.typeitjs.com/docs/vanilla/usage#options）\nexport default defineComponent({\n  name: \"TypeIt\",\n  props: {\n    /** 打字速度，以每一步之间的毫秒数为单位，默认`200` */\n    speed: {\n      type: Number,\n      default: 200\n    },\n    values: {\n      type: Array,\n      defalut: []\n    },\n    className: {\n      type: String,\n      default: \"type-it\"\n    },\n    cursor: {\n      type: Boolean,\n      default: true\n    }\n  },\n  render() {\n    return h(\n      \"span\",\n      {\n        class: this.className\n      },\n      {\n        default: () => []\n      }\n    );\n  },\n  mounted() {\n    new TypeIt(`.${this.className}`, {\n      strings: this.values,\n      speed: this.speed,\n      cursor: this.cursor\n    }).go();\n  }\n});\n"],"names":["isArray","thing","asArray","value","Queue","initialItems","add","steps","step","_q","_a","buildQueueItem","getTypeable","rawValues","set","index","item","keys","queueItem","reset","wipe","getQueue","destroy","key","getItems","all","i","done","shouldDestroy","toArray","val","createTextNode","content","expandTextNodes","element","child","c","getParsedBody","doc","DATA_ATTRIBUTE","CURSOR_CLASS","END","DEFAULT_STATUSES","DEFAULT_OPTIONS","n","PLACEHOLDER_CSS","walkElementNodes","shouldReverse","shouldIncludeCursor","cursor","walker","node","_b","nextNode","nodes","chunkStringAsHtml","string","maybeChunkStringAsHtml","str","asHtml","createElement","el","appendStyleBlock","styles","id","styleBlock","calculateDelay","delayArg","randomInRange","range2","range","calculatePace","options","speed","deleteSpeed","lifeLike","destroyTimeouts","timeouts","generateHash","isInput","getAllChars","fireWhenVisible","func","entries","observer2","entry","handleFunctionalArg","arg","isNumber","select","selector","isBodyElement","insertIntoElement","originalTarget","character","target","updateCursorPosition","cursorPosition","printedCharacters","merge","originalObj","newObj","removeNode","rootElement","nodeParent","repositionCursor","allChars","newCursorPosition","nodeToInsertBefore","selectorToElement","isNonVoidElement","wait","callback","delay","resolve","cb","cursorFontStyles","setCursorStyles","cursorSelector","computedStyles","customProperties","accumulator","duplicate","times","countStepsToSelector","queueItems","to","isMovingToEnd","selectorIndex","char","parentElement","parentMatches","offset","beforePaint","getAnimationFromElement","animation","setCursorAnimation","frames","rebuildCursorAnimation","cursorOptions","oldCurrentTime","newAnimation","execute","fireItem","wait2","instantQueue","tempIndex","futureItem","shouldBeGrouped","shouldPauseCursor","q","processCursorOptions","newOptions","defaultFrames","defaultOptions","TypeIt","_wait","silent","_statuses","_opts","_timeouts","_fireItemWithContext","_cursor","_removeNode","_element","_elementIsInput","_getPace","_getAllChars","_maybeAppendPause","opts","_queue","_queueAndReturn","_getDerivedCursorPosition","_predictedCursorPosition","_cursorPosition","_generateTemporaryOptionQueueItems","_options","_addSplitPause","items","_setUpCursor","_shouldRenderCursor","_attachCursor","_id","options2","_generateQueue","strings","splitItems","_type","_delete","_prepLoop","derivedCursorPosition","_move","_maybePrependHardcodedStrings","existingMarkup","_fire","remember","cleanUp","qKey","queueKey","newIndex","x","y","_empty","actionOpts","numCharacters","bookEndQueueItems","num","instant","typeableQueueItems","rounds","movementArg","numberOfSteps","directionalStep","milliseconds","charsAsQueueItems","itemsToQueue","shouldRemoveCursor","rebuild","property","defineComponent","h"],"mappings":"wCACA,MAAMA,GAAWC,GAAU,MAAM,QAAQA,CAAK,EACxCC,GAAWC,GACRH,GAAQG,CAAK,EAAIA,EAAQ,CAACA,CAAK,EAExC,IAAIC,GAAQ,SAASC,EAAc,CACjC,IAAIC,EAAM,SAASC,EAAO,CACxB,OAAAL,GAAQK,CAAK,EAAE,QAASC,GAAS,OAC/B,OAAOC,EAAG,IAAI,QAAOC,EAAAF,EAAK,OAAL,YAAAE,EAAW,SAAS,EAAGC,EAAe,CAAE,GAAGH,CAAI,CAAE,CAAC,CAC7E,CAAK,EACM,IACX,EACMI,EAAc,IAAMC,IAAY,OAAQV,GAAUA,EAAM,QAAQ,EAChEW,EAAM,SAASC,EAAOC,EAAM,CAC9B,IAAIC,EAAO,CAAC,GAAGR,EAAG,KAAM,CAAA,EACxBA,EAAG,IAAIQ,EAAKF,CAAK,EAAGJ,EAAeK,CAAI,CAAC,CAC5C,EACML,EAAkBO,IACpBA,EAAU,kBAAoB,UAAW,CACvC,MAAO,GAAQ,KAAK,UAAY,KAAK,YAAc,KAAK,UAC9D,EACWA,GAELC,EAAQ,UAAW,CACrBV,EAAG,QAASO,GAAS,OAAOA,EAAK,IAAI,CACzC,EACMI,EAAO,UAAW,CACpBX,EAAqB,IAAI,IACzBH,EAAID,CAAY,CACpB,EACMgB,EAAW,IAAMZ,EACjBI,EAAY,IAAM,MAAM,KAAKJ,EAAG,OAAM,CAAE,EACxCa,EAAWC,GAAQd,EAAG,OAAOc,CAAG,EAChCC,EAAW,CAACC,EAAM,KAAUA,EAAMZ,EAAW,EAAGA,EAAW,EAAC,OAAQa,GAAM,CAACA,EAAE,IAAI,EACjFC,EAAO,CAACJ,EAAKK,EAAgB,KAAUA,EAAgBnB,EAAG,OAAOc,CAAG,EAAId,EAAG,IAAIc,CAAG,EAAE,KAAO,GAC3Fd,EAAqB,IAAI,IAC7B,OAAAH,EAAID,CAAY,EACT,CACL,IAAAC,EACA,IAAAQ,EACA,KAAAM,EACA,MAAAD,EACA,QAAAG,EACA,KAAAK,EACA,SAAAH,EACA,SAAAH,EACA,YAAAT,CACJ,CACA,EACA,MAAMiB,GAAWC,GAAQ,MAAM,KAAKA,CAAG,EACjCC,EAAkBC,GAAY,SAAS,eAAeA,CAAO,EACnE,IAAIC,EAAmBC,IACrB,CAAC,GAAGA,EAAQ,UAAU,EAAE,QAASC,GAAU,CACzC,GAAIA,EAAM,UAAW,CACnB,CAAC,GAAGA,EAAM,SAAS,EAAE,QAASC,GAAM,CAClCD,EAAM,WAAW,aAAaJ,EAAeK,CAAC,EAAGD,CAAK,CAC9D,CAAO,EACDA,EAAM,OAAM,EACZ,MACD,CACDF,EAAgBE,CAAK,CACzB,CAAG,EACMD,GAET,MAAMG,GAAiBL,GAAY,CACjC,IAAIM,EAAM,SAAS,eAAe,mBAAkB,EACpD,OAAAA,EAAI,KAAK,UAAYN,EACdC,EAAgBK,EAAI,IAAI,CACjC,EACMC,GAAiB,iBACjBC,EAAe,YACfC,GAAM,MACNC,GAAmB,CACvB,QAAS,GACT,UAAW,GACX,OAAQ,GACR,UAAW,EACb,EACMC,EAAkB,CACtB,WAAY,GACZ,OAAQ,CACN,UAAW,GACX,eAAgB,IAChB,UAAW,CACT,OAAQ,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKC,IACd,CAAE,QAASA,GACnB,EACD,QAAS,CACP,WAAY,IACZ,OAAQ,kBACR,KAAM,UACP,CACF,CACF,EACD,WAAY,IACZ,YAAa,IACb,YAAa,KACb,KAAM,GACN,SAAU,GACV,KAAM,GACN,UAAW,IACX,gBAAiB,IACjB,MAAO,IACP,WAAY,IACZ,YAAa,GACb,QAAS,CAAE,EACX,iBAAkB,GAClB,aAAc,IAAM,CACnB,EACD,YAAa,IAAM,CAClB,EACD,WAAY,IAAM,CACjB,EACD,UAAW,IAAM,CAChB,EACD,cAAe,IAAM,CACpB,CACH,EACMC,GAAkB,IAAIN,EAAc,gFAC1C,SAASO,GAAiBZ,EAASa,EAAgB,GAAOC,EAAsB,GAAO,CACrF,IAAIC,EAASf,EAAQ,cAAc,IAAIM,CAAY,EAAE,EACjDU,EAAS,SAAS,iBAAiBhB,EAAS,WAAW,SAAU,CACnE,WAAaiB,GAAS,SACpB,GAAIF,GAAUD,EAAqB,CACjC,IAAItC,EAAAyC,EAAK,YAAL,MAAAzC,EAAgB,SAAS8B,GAC3B,OAAO,WAAW,cAEpB,GAAIS,EAAO,SAASE,CAAI,EACtB,OAAO,WAAW,aAErB,CACD,OAAOC,EAAAD,EAAK,YAAL,MAAAC,EAAgB,SAASZ,GAAgB,WAAW,cAAgB,WAAW,aACvF,CACL,CAAG,EACGa,EACAC,EAAQ,CAAA,EACZ,KAAOD,EAAWH,EAAO,YAClBG,EAAS,iBACZA,EAAS,eAAiBA,EAAS,YAErCC,EAAM,KAAKD,CAAQ,EAErB,OAAON,EAAgBO,EAAM,QAAO,EAAKA,CAC3C,CACA,SAASC,GAAkBC,EAAQ,CACjC,OAAOV,GAAiBT,GAAcmB,CAAM,CAAC,CAC/C,CACA,SAASC,GAAuBC,EAAKC,EAAS,GAAM,CAClD,OAAOA,EAASJ,GAAkBG,CAAG,EAAI7B,GAAQ6B,CAAG,EAAE,IAAI3B,CAAc,CAC1E,CACA,MAAM6B,EAAiBC,GAAO,SAAS,cAAcA,CAAE,EACjDC,GAAmB,CAACC,EAAQC,EAAK,KAAO,CAC5C,IAAIC,EAAaL,EAAc,OAAO,EACtCK,EAAW,GAAKD,EAChBC,EAAW,YAAYlC,EAAegC,CAAM,CAAC,EAC7C,SAAS,KAAK,YAAYE,CAAU,CACtC,EACMC,EAAkBC,IACjBnE,GAAQmE,CAAQ,IACnBA,EAAW,CAACA,EAAW,EAAGA,EAAW,CAAC,GAEjCA,GAEHC,EAAgB,CAACjE,EAAOkE,IACrB,KAAK,IACV,KAAK,UAAYlE,EAAQkE,GAAUlE,EAAQkE,KAAYlE,EAAQkE,EACnE,EAEA,IAAIC,GAASxC,GAAQA,EAAM,EAC3B,SAASyC,GAAcC,EAAS,CAC9B,GAAI,CAAE,MAAAC,EAAO,YAAAC,EAAa,SAAAC,CAAQ,EAAKH,EACvC,OAAAE,EAAcA,IAAgB,KAAOA,EAAcD,EAAQ,EACpDE,EAAW,CAChBP,EAAcK,EAAOH,GAAMG,CAAK,CAAC,EACjCL,EAAcM,EAAaJ,GAAMI,CAAW,CAAC,CACjD,EAAM,CAACD,EAAOC,CAAW,CACzB,CACA,MAAME,GAAmBC,IACvBA,EAAS,QAAQ,YAAY,EACtB,IAEHC,GAAe,IAAM,KAAK,OAAQ,EAAC,SAAQ,EAAG,UAAU,EAAG,CAAC,EAC5DC,EAAWlB,GAAO,UAAWA,EACnC,IAAImB,GAAe9C,GACb6C,EAAQ7C,CAAO,EACVL,GAAQK,EAAQ,KAAK,EAEvBY,GAAiBZ,EAAS,EAAI,EAAE,OACpCE,GAAM,EAAEA,EAAE,WAAW,OAAS,EACnC,EAEA,MAAM6C,GAAkB,CAAC/C,EAASgD,IAAS,CAC1B,IAAI,qBACjB,CAACC,EAASC,IAAc,CACtBD,EAAQ,QAASE,GAAU,CACrBA,EAAM,iBACRH,IACAE,EAAU,UAAUlD,CAAO,EAErC,CAAO,CACF,EACD,CAAE,UAAW,CAAG,CACpB,EACW,QAAQA,CAAO,CAC1B,EACA,IAAIoD,EAAuBC,GAClB,OAAOA,GAAQ,WAAaA,EAAG,EAAKA,EAE7C,MAAMC,GAAYrF,GAAU,OAAO,UAAUA,CAAK,EAClD,IAAIsF,EAAS,CAACC,EAAUxD,EAAU,SAAUT,EAAM,KACzCS,EAAQ,gBAAgBT,EAAM,MAAQ,EAAE,EAAE,EAAEiE,CAAQ,EAEzDC,GAAiBxC,GAAS,QAAQ,KAAKA,GAAA,YAAAA,EAAM,OAAO,EACpDyC,GAAoB,CAACC,EAAgBC,IAAc,CACrD,GAAIf,EAAQc,CAAc,EAAG,CAC3BA,EAAe,MAAQ,GAAGA,EAAe,KAAK,GAAGC,EAAU,WAAW,GACtE,MACD,CACDA,EAAU,UAAY,GACtB,IAAIC,EAASJ,GAAcG,EAAU,cAAc,EAAID,EAAiBC,EAAU,gBAAkBD,EACpGE,EAAO,aACLD,EACAL,EAAO,IAAMjD,EAAcuD,CAAM,GAAK,IAC1C,CACA,EACIC,GAAuB,CAACzF,EAAO0F,EAAgBC,IAC1C,KAAK,IACV,KAAK,IAAID,EAAiB1F,EAAO,CAAC,EAClC2F,EAAkB,MACtB,EAEA,MAAMC,EAAQ,CAACC,EAAaC,IAAW,OAAO,OAAO,CAAE,EAAED,EAAaC,CAAM,EACtEC,GAAa,CAACnD,EAAMoD,IAAgB,CACxC,GAAI,CAACpD,EACH,OACF,IAAIqD,EAAarD,EAAK,YACHqD,EAAW,WAAW,OAAS,GAAKA,EAAW,WAAWD,CAAW,EAAIpD,EAAOqD,GACtF,OAAM,CACrB,EACMC,GAAmB,CAACvE,EAASwE,EAAUC,IAAsB,CACjE,IAAIC,EAAqBF,EAASC,EAAoB,CAAC,EACnD1D,EAASwC,EAAO,IAAIjD,CAAY,GAAIN,CAAO,EAC/CA,GAAU0E,GAAA,YAAAA,EAAoB,aAAc1E,EAC5CA,EAAQ,aAAae,EAAQ2D,GAAsB,IAAI,CACzD,EACA,SAASC,GAAkB5G,EAAO,CAChC,OAAO,OAAOA,GAAU,SAAWwF,EAAOxF,CAAK,EAAIA,CACrD,CACA,MAAM6G,GAAoBjD,GAAO,sBAAsB,KAAKA,EAAG,SAAS,EACxE,IAAIkD,GAAO,CAACC,EAAUC,EAAOpC,IACpB,IAAI,QAASqC,GAAY,CAC9B,IAAIC,EAAK,SAAY,CACnB,MAAMH,EAAQ,EACdE,GACN,EACIrC,EAAS,KAAK,WAAWsC,EAAIF,GAAS,CAAC,CAAC,CAC5C,CAAG,EAECG,GAAmB,CACrB,cAAe,GACf,cAAe,GACf,YAAa,GACb,aAAc,GACd,cAAe,GACf,MAAO,GACP,UAAW,qBACb,EACIC,GAAkB,CAACrD,EAAI9B,IAAY,CAErC,IAAIoF,EAAiB,GADF,IAAI/E,EAAc,KAAKyB,CAAE,IACR,KAAKxB,CAAY,GACjD+E,EAAiB,iBAAiBrF,CAAO,EACzCsF,EAAmB,OAAO,QAAQJ,EAAgB,EAAE,OACtD,CAACK,EAAa,CAACzG,EAAMb,CAAK,IACjB,GAAGsH,CAAW,IAAIzG,CAAI,qBAAqBA,CAAI,KAAKb,GAASoH,EAAevG,CAAI,CAAC,KAE1F,EACJ,EACE8C,GACE,GAAGwD,CAAc,uCAAuCE,CAAgB,KACxExD,CACJ,CACA,EACA,MAAM0D,EAAY,CAACvH,EAAOwH,IAAU,IAAI,MAAMA,CAAK,EAAE,KAAKxH,CAAK,EACzDyH,GAAuB,CAAC,CAC5B,WAAAC,EACA,SAAAnC,EACA,eAAAO,EACA,GAAA6B,CACF,IAAM,CACJ,GAAItC,GAASE,CAAQ,EACnB,OAAOA,EAAW,GAEpB,IAAIqC,EAAgB,IAAI,OAAOtF,GAAK,GAAG,EAAE,KAAKqF,CAAE,EAC5CE,EAAgBtC,EAAW,CAAC,GAAGmC,CAAU,EAAE,QAAO,EAAG,UAAU,CAAC,CAAE,KAAAI,KAAW,CAC/E,IAAIC,EAAgBD,EAAK,cACrBE,EAAgBD,EAAc,QAAQxC,CAAQ,EAClD,OAAIqC,GAAiBI,EACZ,GAEFA,GAAiBD,EAAc,WAAW,WAAWD,CAAI,CACpE,CAAG,EAAI,GACDD,EAAgB,IAClBA,EAAgBD,EAAgB,EAAIF,EAAW,OAAS,GAE1D,IAAIO,EAASL,EAAgB,EAAI,EACjC,OAAOC,EAAgB/B,EAAiBmC,CAC1C,EACA,IAAIC,EAAelB,GACV,IAAI,QAASD,GAAY,CAC9B,sBAAsB,SAAY,CAChCA,EAAQ,MAAMC,EAAE,CAAE,CACxB,CAAK,CACL,CAAG,EAECmB,GAA2BpG,GACtBA,GAAA,YAAAA,EAAS,gBAAgB,KAAMqG,GAC7BA,EAAU,KAAOrG,EAAQ,QAAQ,eAGxCsG,GAAqB,CAAC,CACxB,OAAAvF,EACA,OAAAwF,EACA,QAAAjE,CACF,IAAM,CACJ,IAAI+D,EAAYtF,EAAO,QAAQwF,EAAQjE,CAAO,EAC9C,OAAA+D,EAAU,MAAK,EACfA,EAAU,GAAKtF,EAAO,QAAQ,cAC9BoF,EAAY,IAAM,CAChBA,EAAY,IAAM,CAChBE,EAAU,KAAI,CACpB,CAAK,CACL,CAAG,EACMA,CACT,EACIG,GAAyB,CAAC,CAC5B,OAAAzF,EACA,QAAAuB,EACA,cAAAmE,CACF,IAAM,CACJ,GAAI,CAAC1F,GAAU,CAAC0F,EACd,OACF,IAAIJ,EAAYD,GAAwBrF,CAAM,EAC1C2F,EACAL,IACF/D,EAAQ,MAAQ+D,EAAU,OAAO,kBAAiB,EAAG,MACrDK,EAAiBL,EAAU,YAC3BA,EAAU,OAAM,GAElB,IAAIM,EAAeL,GAAmB,CACpC,OAAAvF,EACA,OAAQ0F,EAAc,UAAU,OAChC,QAAAnE,CACJ,CAAG,EACD,OAAIoE,IACFC,EAAa,YAAcD,GAEtBC,CACT,EACIC,GAAW5H,GAAc,OAAA,OAAAR,EAAAQ,EAAU,OAAV,YAAAR,EAAgB,KAAK,OAC9CqI,GAAW,MAAO,CACpB,MAAAhI,EACA,WAAA8G,EACA,KAAMmB,EACN,OAAA/F,EACA,cAAA0F,CACF,IAAM,CACJ,IAAIzH,EAAY2G,EAAW9G,CAAK,EAAE,CAAC,EAC/BkI,EAAe,CAAA,EACfC,EAAYnI,EACZoI,EAAajI,EACbkI,EAAkB,IAAMD,GAAc,CAACA,EAAW,MAClDE,EAAoBnI,EAAU,kBAAiB,GAAMyH,EAAc,UACvE,KAAOS,EAAe,GACpBH,EAAa,KAAKE,CAAU,EAC5BC,EAAe,GAAMF,IACrBC,EAAatB,EAAWqB,CAAS,EAAIrB,EAAWqB,CAAS,EAAE,CAAC,EAAI,KAElE,GAAID,EAAa,OACf,aAAMZ,EAAY,SAAY,CAC5B,QAASiB,KAAKL,EACZ,MAAMH,GAAQQ,CAAC,CAEvB,CAAK,EACMJ,EAAY,EAErB,IAAIX,EAAYD,GAAwBrF,CAAM,EAC1CuB,EACJ,OAAI+D,IACF/D,EAAU,CACR,GAAG+D,EAAU,OAAO,kBAAmB,EACvC,MAAOc,EAAoBV,EAAc,eAAiB,CAChE,GAEE,MAAMK,EAAM,SAAY,CAClBT,GAAac,GACfd,EAAU,OAAM,EAElB,MAAMF,EAAY,IAAM,CACtBS,GAAQ5H,CAAS,CACvB,CAAK,CACL,EAAKA,EAAU,KAAK,EAClB,MAAMwH,GAAuB,CAC3B,OAAAzF,EACA,QAAAuB,EACA,cAAAmE,CACJ,CAAG,EACM5H,CACT,EACIwI,GAAwBZ,GAAkB,SAC5C,GAAI,OAAOA,GAAkB,SAAU,CACrC,IAAIa,EAAa,CAAA,EACb,CAAE,OAAQC,EAAe,QAASC,CAAc,EAAK/G,EAAgB,OAAO,UAChF,OAAA6G,EAAW,UAAYb,EAAc,WAAa,CAAA,EAClDa,EAAW,UAAU,SAAS9I,EAAAiI,EAAc,YAAd,YAAAjI,EAAyB,SAAU+I,EACjED,EAAW,UAAU,QAAUrD,EAC7BuD,IACAtG,EAAAuF,EAAc,YAAd,YAAAvF,EAAyB,UAAW,CAAE,CAC5C,EACIoG,EAAW,UAAYb,EAAc,WAAahG,EAAgB,OAAO,UACzE6G,EAAW,eAAiBb,EAAc,gBAAkBhG,EAAgB,OAAO,eAC5E6G,CACR,CACD,OAAIb,IAAkB,GACbhG,EAAgB,OAElBgG,CACT,EACA,MAAMgB,GAAS,SAASzH,EAASsC,EAAU,GAAI,CAC7C,IAAIoF,EAAQ,MAAO5C,EAAUC,EAAO4C,EAAS,KAAU,CACjDC,EAAU,QACZ,MAAM,IAAI,QAAS5C,GAAY,CAC7B,KAAK,SAAW,IAAM,CACpB4C,EAAU,OAAS,GACnB5C,GACV,CACA,CAAO,EAEH2C,GAAU,MAAME,EAAM,WAAW,IAAI,EACrC,MAAMhD,GAAKC,EAAUC,EAAO+C,CAAS,EACrCH,GAAU,MAAME,EAAM,UAAU,IAAI,CACxC,EACME,EAAuB,CAAClJ,EAAO8G,IAC1BkB,GAAS,CACd,MAAAhI,EACA,WAAA8G,EACA,KAAM+B,EACN,OAAQM,EACR,cAAeH,EAAM,MAC3B,CAAK,EAECI,EAAehH,GAASmD,GAAWnD,EAAMiH,CAAQ,EACjDC,EAAkB,IAAMtF,EAAQqF,CAAQ,EACxCE,EAAW,CAACvJ,EAAQ,IAAMwD,GAAcwF,CAAK,EAAEhJ,CAAK,EACpDwJ,EAAe,IAAMvF,GAAYoF,CAAQ,EACzCI,EAAoB,CAACC,EAAO,KAAO,CACrC,IAAIxD,EAAQwD,EAAK,MACjBxD,GAASyD,EAAO,IAAI,CAAE,MAAAzD,CAAO,CAAA,CACjC,EACM0D,EAAkB,CAACpK,EAAOkK,KAC5BC,EAAO,IAAInK,CAAK,EAChBiK,EAAkBC,CAAI,EACf,MAELG,EAA4B,IAAMC,GAA4BC,EAC9DC,EAAqC,CAACvB,EAAa,KAC9C,CACL,CAAE,KAAM,IAAMwB,EAASxB,CAAU,CAAG,EACpC,CAAE,KAAM,IAAMwB,EAASjB,CAAK,CAAG,CACrC,EAEMkB,EAAkBC,GAAU,CAC9B,IAAIjE,EAAQ8C,EAAM,gBAClBW,EAAO,IAAI,CAAC,CAAE,MAAOzD,EAAM,CAAC,CAAC,EAAI,GAAGiE,EAAO,CAAE,MAAOjE,EAAM,CAAC,CAAC,CAAE,CAAC,CACnE,EACMkE,EAAe,IAAM,CACvB,GAAId,EAAe,EACjB,OAEF,IAAIpH,EAASW,EAAc,MAAM,EAEjC,OADAX,EAAO,UAAYT,EACd4I,GAILnI,EAAO,UAAYZ,GAAc0H,EAAM,UAAU,EAAE,UAC5C9G,IAJLA,EAAO,MAAM,WAAa,SACnBA,EAIb,EACMoI,EAAgB,SAAY,CAE9B,GADA,CAAChB,EAAiB,GAAIH,GAAWE,EAAS,YAAYF,CAAO,EACzDkB,EAAqB,CACvB/D,GAAgBiE,EAAKlB,CAAQ,EAC7BF,EAAQ,QAAQ,cAAgBoB,EAChC,GAAI,CAAE,UAAA/C,CAAS,EAAKwB,EAAM,OACtB,CAAE,OAAAtB,EAAQ,QAAS8C,CAAQ,EAAKhD,EACpCC,GAAmB,CACjB,OAAAC,EACA,OAAQyB,EACR,QAAS,CACP,SAAUH,EAAM,YAChB,GAAGwB,CACJ,CACT,CAAO,CACF,CACL,EACMC,EAAiB,IAAM,CACzB,IAAIC,EAAU1B,EAAM,QAAQ,OAAQvG,GAAW,CAAC,CAACA,CAAM,EACvDiI,EAAQ,QAAQ,CAACjI,EAAQzC,IAAU,CAEjC,GADA,KAAK,KAAKyC,CAAM,EACZzC,EAAQ,IAAM0K,EAAQ,OACxB,OAEF,IAAIC,EAAa3B,EAAM,WAAa,CAAC,CAAE,KAAM,IAAM4B,EAAM/H,EAAc,IAAI,CAAC,EAAG,SAAU,EAAI,CAAE,EAAI8D,EACjG,CACE,KAAMkE,EACN,MAAOtB,EAAS,CAAC,CAClB,EACDI,EAAO,YAAW,EAAG,MAC7B,EACMO,EAAeS,CAAU,CAC/B,CAAK,CACL,EACMG,GAAY,MAAO5E,GAAU,CAC/B,IAAI6E,EAAwBlB,IAC5BkB,GAAyB,MAAMC,EAAM,CAAE,MAAOD,CAAuB,CAAA,EACrE,IAAIjE,EAAa0C,EAAY,EAAG,IAAK,GAC5B,CACL,OAAQ,EACR,CACE,KAAMqB,EACN,MAAOtB,EAAS,CAAC,EACjB,UAAW,GACX,kBAAmB,IAAM,EAC1B,CACT,CACK,EACD,QAASvJ,EAAQ,EAAGA,EAAQ8G,EAAW,OAAQ9G,IAC7C,MAAMkJ,EAAqBlJ,EAAO8G,CAAU,EAE9C6C,EAAO,MAAK,EACZA,EAAO,IAAI,EAAG,CAAE,MAAAzD,CAAO,CAAA,CAC3B,EACM+E,GAAiCP,GAAY,CAC/C,IAAIQ,EAAiB7B,EAAS,UAC9B,OAAK6B,GAGL7B,EAAS,UAAY,GACjBL,EAAM,aACRK,EAAS,UAAY6B,EACrBhK,EAAgBmI,CAAQ,EACxBa,EACEvD,EACE,CACE,KAAMkE,EACN,MAAOtB,EAAS,CAAC,EACjB,UAAW,EACZ,EACDC,EAAc,EAAC,MAChB,CACT,EACakB,GAEcQ,EAAe,QAAQ,gBAAiB,EAAE,EAAE,KAAM,EAAC,MAAM,qBAAqB,EAC7E,OAAOR,CAAO,GAnB7BA,CAoBb,EACMS,EAAQ,MAAOC,EAAW,KAAS,CACrCrC,EAAU,QAAU,GACpB,IAAIsC,EAAWC,GAAS,CACtB3B,EAAO,KAAK2B,EAAM,CAACF,CAAQ,CACjC,EACI,GAAI,CACF,IAAItE,EAAa,CAAC,GAAG6C,EAAO,SAAU,CAAA,EACtC,QAAS3J,EAAQ,EAAGA,EAAQ8G,EAAW,OAAQ9G,IAAS,CACtD,GAAI,CAACuL,EAAUpL,CAAS,EAAI2G,EAAW9G,CAAK,EAC5C,GAAI,CAAAG,EAAU,KAEd,IAAI,CAACA,EAAU,WAAaA,EAAU,WAAaqJ,EAAc,EAAC,OAAQ,CACxE,IAAIgC,EAAW,MAAMtC,EAAqBlJ,EAAO8G,CAAU,EAC3D,MAAM0E,EAAWxL,CAAK,EAAE,KAAKA,EAAQ,CAAC,EAAE,IAAI,CAACyL,EAAGC,IAAMD,EAAIC,CAAC,EAAE,QAAS/K,GAAM,CAC1E,GAAI,CAACH,CAAG,EAAIsG,EAAWnG,CAAC,EACxB0K,EAAQ7K,CAAG,CACvB,CAAW,EACDR,EAAQwL,CACT,CACDH,EAAQE,CAAQ,EACjB,CACD,GAAI,CAACH,EACH,OAAO,KAIT,GAFArC,EAAU,UAAY,GACtB,MAAMC,EAAM,cAAc,IAAI,EAC1B,CAACA,EAAM,KACT,KAAM,GAER,IAAI9C,EAAQ8C,EAAM,UAClBH,EAAM,SAAY,CAChB,MAAMiC,GAAU5E,EAAM,CAAC,CAAC,EACxBiF,GACR,EAASjF,EAAM,CAAC,CAAC,CACZ,MAAW,CACX,CACD,OAAO,IACX,EACM8E,EAAQ,MAAOvL,GAAS,CAC1BsK,EAAkB9E,GAChBxF,EACAsK,EACAP,EAAc,CACpB,EACI9D,GAAiB2D,EAAUG,EAAc,EAAEO,CAAe,CAC9D,EACMa,EAAS1D,GAASrC,GAAkBwE,EAAUnC,CAAI,EAClD+C,EAAW,MAAOP,GAASV,EAAQ5D,EAAM4D,EAAOU,CAAI,EACpDiC,GAAS,SAAY,CACvB,GAAIrC,EAAe,EAAI,CACrBD,EAAS,MAAQ,GACjB,MACD,CACDG,EAAc,EAAC,QAAQJ,CAAW,CAEtC,EACMyB,EAAU,IAAM,CAClB,IAAIlF,EAAW6D,IACV7D,EAAS,SAEV2D,EAAe,EACjBD,EAAS,MAAQA,EAAS,MAAM,MAAM,EAAG,EAAE,EAE3CD,EAAYzD,EAASoE,CAAe,CAAC,EAE3C,EACE,KAAK,MAAQ,SAAS6B,EAAY,CAChC,OAAOhC,EACL,CACE,KAAM,IAAMgB,EAAM/H,EAAc,IAAI,CAAC,EACrC,SAAU,EACX,EACD+I,CACN,CACA,EACE,KAAK,OAAS,SAASC,EAAgB,KAAMD,EAAa,CAAA,EAAI,CAC5DC,EAAgBtH,EAAoBsH,CAAa,EACjD,IAAIC,EAAoB9B,EAAmC4B,CAAU,EACjEG,EAAMF,EACN,CAAE,QAAAG,EAAS,GAAAjF,CAAI,EAAG6E,EAClBK,EAAqBtC,EAAO,cAC5BuC,GAAU,IACRH,IAAQ,KACHE,EAAmB,OAExBxH,GAASsH,CAAG,EACPA,EAEFlF,GAAqB,CAC1B,WAAYoF,EACZ,SAAUF,EACV,eAAgBlC,EAA2B,EAC3C,GAAA9C,CACR,CAAO,KAEH,OAAO6C,EACL,CACEkC,EAAkB,CAAC,EACnB,GAAGnF,EACD,CACE,KAAMkE,EACN,MAAOmB,EAAU,EAAIzC,EAAS,CAAC,EAC/B,UAAW,EACZ,EACD2C,CACD,EACDJ,EAAkB,CAAC,CACpB,EACDF,CACN,CACA,EACE,KAAK,MAAQ,SAASA,EAAa,GAAI,CACrC,OAAOhC,EAAgB,CAAE,KAAM+B,EAAQ,EAAEC,CAAU,CACvD,EACE,KAAK,KAAO,SAASzH,EAAMyH,EAAa,CAAA,EAAI,CAC1C,IAAIE,EAAoB9B,EAAmC4B,CAAU,EACrE,OAAOhC,EACL,CAACkC,EAAkB,CAAC,EAAG,CAAE,KAAM,IAAM3H,EAAK,IAAI,CAAG,EAAE2H,EAAkB,CAAC,CAAC,EACvEF,CACN,CACA,EACE,KAAK,KAAO,SAASO,EAAaP,EAAa,CAAA,EAAI,CACjDO,EAAc5H,EAAoB4H,CAAW,EAC7C,IAAIL,EAAoB9B,EAAmC4B,CAAU,EACjE,CAAE,QAAAI,EAAS,GAAAjF,CAAI,EAAG6E,EAClBQ,EAAgBvF,GAAqB,CACvC,WAAY8C,EAAO,YAAa,EAChC,SAAUwC,IAAgB,KAAO,GAAKA,EACtC,GAAApF,EACA,eAAgB8C,EAA2B,CACjD,CAAK,EACGwC,EAAkBD,EAAgB,EAAI,GAAK,EAC/C,OAAAtC,EAA2BD,EAA2B,EAAGuC,EAClDxC,EACL,CACEkC,EAAkB,CAAC,EACnB,GAAGnF,EACD,CACE,KAAM,IAAMqE,EAAMqB,CAAe,EACjC,MAAOL,EAAU,EAAIzC,EAAU,EAC/B,WAAY,EACb,EACD,KAAK,IAAI6C,CAAa,CACvB,EACDN,EAAkB,CAAC,CACpB,EACDF,CACN,CACA,EACE,KAAK,QAAU,SAASlC,EAAMkC,EAAa,CAAA,EAAI,CAC7C,OAAAlC,EAAOnF,EAAoBmF,CAAI,EAC/BO,EAASP,CAAI,EACNE,EAAgB,GAAIgC,CAAU,CACzC,EACE,KAAK,MAAQ,SAASU,EAAcV,EAAa,CAAA,EAAI,CACnD,OAAOhC,EACL,CAAE,MAAOrF,EAAoB+H,CAAY,CAAG,EAC5CV,CACN,CACA,EACE,KAAK,KAAO,SAASnJ,EAAQmJ,EAAa,CAAA,EAAI,CAC5CnJ,EAAS8B,EAAoB9B,CAAM,EACnC,GAAI,CAAE,QAAAuJ,CAAS,EAAGJ,EACdE,EAAoB9B,EAAmC4B,CAAU,EAEjEW,EADQ7J,GAAuBD,EAAQuG,EAAM,IAAI,EACvB,IAAK9B,IAC1B,CACL,KAAM,IAAM0D,EAAM1D,CAAI,EACtB,KAAAA,EACA,MAAO8E,GAAWjG,GAAiBmB,CAAI,EAAI,EAAIqC,EAAU,EACzD,SAAUrC,EAAK,WAAa,KAAK,SACzC,EACK,EACGsF,EAAe,CACjBV,EAAkB,CAAC,EACnB,CAAE,KAAM,SAAY,MAAM9C,EAAM,aAAavG,EAAQ,IAAI,CAAG,EAC5D,GAAG8J,EACH,CAAE,KAAM,SAAY,MAAMvD,EAAM,YAAYvG,EAAQ,IAAI,CAAG,EAC3DqJ,EAAkB,CAAC,CACzB,EACI,OAAOlC,EAAgB4C,EAAcZ,CAAU,CACnD,EACE,KAAK,GAAK,SAASpL,EAAK,CACtB,OAAOuI,EAAUvI,CAAG,CACxB,EACE,KAAK,QAAU,SAASiM,EAAqB,GAAM,CACjDxD,EAAYpF,GAAgBoF,CAAS,EACrC1E,EAAoBkI,CAAkB,GAAKtD,GAAWC,EAAYD,CAAO,EACzEJ,EAAU,UAAY,EAC1B,EACE,KAAK,OAAS,UAAW,CACvBA,EAAU,OAAS,EACvB,EACE,KAAK,SAAW,IAAM,CACxB,EACE,KAAK,MAAQ,SAAS2D,EAAS,CAC7B,CAAC,KAAK,GAAG,WAAW,GAAK,KAAK,QAAO,EACjCA,GACF/C,EAAO,KAAI,EACX+C,EAAQ,IAAI,GAEZ/C,EAAO,MAAK,EAEdI,EAAkB,EAClB,QAAS4C,KAAY5D,EACnBA,EAAU4D,CAAQ,EAAI,GAExB,OAAAtD,EAASC,EAAiB,EAAG,QAAU,WAAW,EAAI,GAC/C,IACX,EACE,KAAK,GAAK,UAAW,CACnB,OAAIP,EAAU,QACL,MAETuB,IACKtB,EAAM,kBAIX9E,GAAgBmF,EAAU8B,EAAM,KAAK,IAAI,CAAC,EACnC,OAJLA,IACO,MAIb,EACE,KAAK,MAAQ,SAAS/E,EAAK,IAAM,CACnC,EAAK,CACD,OAAAkE,IACAa,EAAM,EAAK,EAAE,KAAK/E,CAAE,EACb,IACX,EACE,KAAK,SAAW,IAAMuD,EACtB,KAAK,WAAa,IAAMX,EACxB,KAAK,cAAiBwB,GAAaP,EAASO,CAAQ,EACpD,KAAK,WAAa,IAAMnB,EACxB,IAAIA,EAAWvD,GAAkB3E,CAAO,EACpC8H,EAAY,CAAA,EACZc,EAAkB,EAClBD,EAA2B,KAC3Bf,EAAY3D,EAAM,CAAE,EAAEzD,EAAgB,EAC1C8B,EAAQ,OAAS+E,GACf/E,EAAQ,QAAU7B,EAAgB,MACtC,EACE,IAAIoH,EAAQ5D,EAAMxD,EAAiB6B,CAAO,EAC1CuF,EAAQ5D,EAAM4D,EAAO,CACnB,KAAM,CAACM,KAAqBN,EAAM,KAClC,gBAAiB7F,EAAe6F,EAAM,eAAe,EACrD,UAAW7F,EAAe6F,EAAM,SAAS,CAC7C,CAAG,EACD,IAAIuB,EAAMxG,KACN4F,EAAStK,GAAM,CAAC,CAAE,MAAO2J,EAAM,UAAY,CAAA,CAAC,EAChDK,EAAS,QAAQ,SAAWkB,EAC5BxH,GAAiBjB,EAAe,EAChC,IAAIuI,EAAsB,CAAC,CAACrB,EAAM,QAAU,CAACM,EAAe,EACxDH,EAAUiB,IACdpB,EAAM,QAAUiC,GAA8B9L,GAAQ6J,EAAM,OAAO,CAAC,EAChEA,EAAM,QAAQ,QAChByB,GAEJ,ECjzBA7B,GAAegE,GAAgB,CAC7B,KAAM,SACN,MAAO,CAEL,MAAO,CACL,KAAM,OACN,QAAS,GACX,EACA,OAAQ,CACN,KAAM,MACN,QAAS,CAAC,CACZ,EACA,UAAW,CACT,KAAM,OACN,QAAS,SACX,EACA,OAAQ,CACN,KAAM,QACN,QAAS,EACX,CACF,EACA,QAAS,CACA,OAAAC,GACL,OACA,CACE,MAAO,KAAK,SACd,EACA,CACE,QAAS,IAAM,CAAC,CAClB,CAAA,CAEJ,EACA,SAAU,CACR,IAAIjE,GAAO,IAAI,KAAK,SAAS,GAAI,CAC/B,QAAS,KAAK,OACd,MAAO,KAAK,MACZ,OAAQ,KAAK,MAAA,CACd,EAAE,GAAG,CACR,CACF,CAAC","x_google_ignoreList":[0]}