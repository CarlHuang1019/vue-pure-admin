{"version":3,"file":"totalRow.vue_vue_type_script_setup_true_lang.js","sources":["../../../src/views/pure-table/base/totalRow.vue"],"sourcesContent":["<script setup lang=\"ts\">\ninterface Product {\n  id: string;\n  name: string;\n  amount1: string;\n  amount2: string;\n  amount3: number;\n}\n\ninterface SummaryMethodProps<T = Product> {\n  columns: any[];\n  data: T[];\n}\n\nconst getSummaries = (param: SummaryMethodProps) => {\n  const { columns, data } = param;\n  const sums: string[] = [];\n  columns.forEach((column, index) => {\n    if (index === 0) {\n      sums[index] = \"Total Cost\";\n      return;\n    }\n    const values = data.map(item => Number(item[column.property]));\n    if (!values.every(value => Number.isNaN(value))) {\n      sums[index] = `$ ${values.reduce((prev, curr) => {\n        const value = Number(curr);\n        if (!Number.isNaN(value)) {\n          return prev + curr;\n        } else {\n          return prev;\n        }\n      }, 0)}`;\n    } else {\n      sums[index] = \"N/A\";\n    }\n  });\n\n  return sums;\n};\n\nconst tableData: Product[] = [\n  {\n    id: \"12987122\",\n    name: \"Tom\",\n    amount1: \"234\",\n    amount2: \"3.2\",\n    amount3: 10\n  },\n  {\n    id: \"12987123\",\n    name: \"Tom\",\n    amount1: \"165\",\n    amount2: \"4.43\",\n    amount3: 12\n  },\n  {\n    id: \"12987124\",\n    name: \"Tom\",\n    amount1: \"324\",\n    amount2: \"1.9\",\n    amount3: 9\n  },\n  {\n    id: \"12987125\",\n    name: \"Tom\",\n    amount1: \"621\",\n    amount2: \"2.2\",\n    amount3: 17\n  },\n  {\n    id: \"12987126\",\n    name: \"Tom\",\n    amount1: \"539\",\n    amount2: \"4.1\",\n    amount3: 15\n  }\n];\n\nconst columns: TableColumnList = [\n  {\n    label: \"ID\",\n    prop: \"id\"\n  },\n  {\n    label: \"Name\",\n    prop: \"name\"\n  },\n  {\n    label: \"Amount 1\",\n    prop: \"amount1\",\n    sortable: true\n  },\n  {\n    label: \"Amount 2\",\n    prop: \"amount2\",\n    sortable: true\n  },\n  {\n    label: \"Amount 3\",\n    prop: \"amount3\",\n    sortable: true\n  }\n];\n\nconst columns1: TableColumnList = [\n  {\n    label: \"ID\",\n    prop: \"id\"\n  },\n  {\n    label: \"Name\",\n    prop: \"name\"\n  },\n  {\n    label: \"Cost 1 ($)\",\n    prop: \"amount1\"\n  },\n  {\n    label: \"Cost 2 ($)\",\n    prop: \"amount2\"\n  },\n  {\n    label: \"Cost 3 ($)\",\n    prop: \"amount3\"\n  }\n];\n</script>\n\n<template>\n  <pure-table\n    :data=\"tableData\"\n    :columns=\"columns\"\n    border\n    show-summary\n    class=\"mb-6\"\n  />\n  <pure-table\n    :data=\"tableData\"\n    :columns=\"columns1\"\n    border\n    :summary-method=\"getSummaries\"\n    show-summary\n  />\n</template>\n"],"names":["getSummaries","param","columns","data","sums","column","index","values","item","value","prev","curr","tableData","columns1"],"mappings":"wGAcM,MAAAA,EAAgBC,GAA8B,CAClD,KAAM,CAAE,QAAAC,EAAS,KAAAC,CAAA,EAASF,EACpBG,EAAiB,CAAA,EACvBF,OAAAA,EAAQ,QAAQ,CAACG,EAAQC,IAAU,CACjC,GAAIA,IAAU,EAAG,CACfF,EAAKE,CAAK,EAAI,aACd,MACF,CACM,MAAAC,EAASJ,EAAK,IAAIK,GAAQ,OAAOA,EAAKH,EAAO,QAAQ,CAAC,CAAC,EACxDE,EAAO,MAAME,GAAS,OAAO,MAAMA,CAAK,CAAC,EAU5CL,EAAKE,CAAK,EAAI,MATdF,EAAKE,CAAK,EAAI,KAAKC,EAAO,OAAO,CAACG,EAAMC,IAAS,CACzC,MAAAF,EAAQ,OAAOE,CAAI,EACzB,OAAK,OAAO,MAAMF,CAAK,EAGdC,EAFAA,EAAOC,CAGhB,EACC,CAAC,CAAC,EAGP,CACD,EAEMP,CAAA,EAGHQ,EAAuB,CAC3B,CACE,GAAI,WACJ,KAAM,MACN,QAAS,MACT,QAAS,MACT,QAAS,EACX,EACA,CACE,GAAI,WACJ,KAAM,MACN,QAAS,MACT,QAAS,OACT,QAAS,EACX,EACA,CACE,GAAI,WACJ,KAAM,MACN,QAAS,MACT,QAAS,MACT,QAAS,CACX,EACA,CACE,GAAI,WACJ,KAAM,MACN,QAAS,MACT,QAAS,MACT,QAAS,EACX,EACA,CACE,GAAI,WACJ,KAAM,MACN,QAAS,MACT,QAAS,MACT,QAAS,EACX,CAAA,EAGIV,EAA2B,CAC/B,CACE,MAAO,KACP,KAAM,IACR,EACA,CACE,MAAO,OACP,KAAM,MACR,EACA,CACE,MAAO,WACP,KAAM,UACN,SAAU,EACZ,EACA,CACE,MAAO,WACP,KAAM,UACN,SAAU,EACZ,EACA,CACE,MAAO,WACP,KAAM,UACN,SAAU,EACZ,CAAA,EAGIW,EAA4B,CAChC,CACE,MAAO,KACP,KAAM,IACR,EACA,CACE,MAAO,OACP,KAAM,MACR,EACA,CACE,MAAO,aACP,KAAM,SACR,EACA,CACE,MAAO,aACP,KAAM,SACR,EACA,CACE,MAAO,aACP,KAAM,SACR,CAAA"}