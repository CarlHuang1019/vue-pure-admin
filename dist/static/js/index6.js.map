{"version":3,"file":"index6.js","sources":["../../../src/views/components/dialog/index.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { useRouter } from \"vue-router\";\nimport { h, createVNode, ref } from \"vue\";\nimport { message } from \"@/utils/message\";\nimport forms, { type FormProps } from \"./form.vue\";\nimport formPrimitive from \"./formPrimitive.vue\";\nimport { cloneDeep, debounce } from \"@pureadmin/utils\";\nimport {\n  addDialog,\n  closeDialog,\n  updateDialog,\n  closeAllDialog\n} from \"@/components/ReDialog\";\n\ndefineOptions({\n  name: \"DialogPage\"\n});\n\nconst router = useRouter();\n\nfunction onBaseClick() {\n  addDialog({\n    title: \"基本使用\",\n    contentRenderer: () => <p>弹框内容-基本使用</p> // jsx 语法 （注意在.vue文件启用jsx语法，需要在script开启lang=\"tsx\"）\n  });\n}\n\nfunction onDraggableClick() {\n  addDialog({\n    title: \"可拖拽\",\n    draggable: true,\n    contentRenderer: () => h(\"p\", \"弹框内容-可拖拽\") // h 渲染函数 https://cn.vuejs.org/api/render-function.html#h\n  });\n}\n\nfunction onFullscreenClick() {\n  addDialog({\n    title: \"全屏\",\n    fullscreen: true,\n    contentRenderer: () => createVNode(\"p\", null, \"弹框内容-全屏\") // createVNode 渲染函数 https://cn.vuejs.org/guide/extras/render-function.html#creating-vnodes\n  });\n}\n\nfunction onFullscreenIconClick() {\n  addDialog({\n    title: \"全屏按钮\",\n    fullscreenIcon: true,\n    contentRenderer: () => <p>弹框内容-全屏按钮</p>\n  });\n}\n\nfunction onModalClick() {\n  addDialog({\n    title: \"无背景遮罩层\",\n    modal: false,\n    contentRenderer: () => <p>弹框内容-无背景遮罩层</p>\n  });\n}\n\nfunction onStyleClick() {\n  addDialog({\n    title: \"自定义弹出位置\",\n    top: \"60vh\",\n    style: { marginRight: \"20px\" },\n    contentRenderer: () => <p>弹框内容-自定义弹出位置</p>\n  });\n}\n\n// 添加 600ms 防抖\nconst onoOpenDelayClick = debounce(\n  () =>\n    addDialog({\n      title: \"延时2秒打开弹框\",\n      openDelay: 2000 - 600,\n      contentRenderer: () => <p>弹框内容-延时2秒打开弹框</p>\n    }),\n  600\n);\n\nfunction onCloseDelayClick() {\n  addDialog({\n    title: \"延时2秒关闭弹框\",\n    closeDelay: 2000,\n    contentRenderer: () => <p>弹框内容-延时2秒关闭弹框</p>\n  });\n}\n\nfunction onShowCloseClick() {\n  addDialog({\n    title: \"不显示右上角关闭按钮图标\",\n    showClose: false,\n    contentRenderer: () => <p>弹框内容-不显示右上角关闭按钮图标</p>\n  });\n}\n\nfunction onBeforeCloseClick() {\n  addDialog({\n    title: \"禁止通过键盘ESC关闭\",\n    closeOnPressEscape: false,\n    contentRenderer: () => <p>弹框内容-禁止通过键盘ESC关闭</p>\n  });\n}\n\nfunction onCloseOnClickModalClick() {\n  addDialog({\n    title: \"禁止通过点击modal关闭\",\n    closeOnClickModal: false,\n    contentRenderer: () => <p>弹框内容-禁止通过点击modal关闭</p>\n  });\n}\n\nfunction onHideFooterClick() {\n  addDialog({\n    title: \"隐藏底部取消、确定按钮\",\n    hideFooter: true,\n    contentRenderer: () => <p>弹框内容-隐藏底部取消、确定按钮</p>\n  });\n}\n\nfunction onHeaderRendererClick() {\n  addDialog({\n    title: \"自定义头部\",\n    showClose: false,\n    headerRenderer: ({ close, titleId, titleClass }) => (\n      // jsx 语法\n      <div class=\"flex flex-row justify-between\">\n        <h4 id={titleId} class={titleClass}>\n          自定义头部\n        </h4>\n        <el-button type=\"danger\" onClick={close}>\n          关闭\n        </el-button>\n      </div>\n    ),\n    contentRenderer: () => <p>弹框内容-自定义头部</p>\n  });\n}\n\nfunction onFooterRendererClick() {\n  addDialog({\n    title: \"自定义底部\",\n    footerRenderer: ({ options, index }) => (\n      <el-button onClick={() => closeDialog(options, index)}>\n        {options.title}-{index}\n      </el-button>\n    ),\n    contentRenderer: () => <p>弹框内容-自定义底部</p>\n  });\n}\n\nfunction onFooterButtonsClick() {\n  addDialog({\n    title: \"自定义底部按钮\",\n    footerButtons: [\n      {\n        label: \"按钮1\",\n        size: \"small\",\n        type: \"success\",\n        btnClick: ({ dialog: { options, index }, button }) => {\n          console.log(options, index, button);\n          closeDialog(options, index);\n        }\n      },\n      {\n        label: \"按钮2\",\n        text: true,\n        bg: true,\n        btnClick: ({ dialog: { options, index }, button }) => {\n          console.log(options, index, button);\n          closeDialog(options, index);\n        }\n      },\n      {\n        label: \"按钮3\",\n        size: \"large\",\n        type: \"warning\",\n        btnClick: ({ dialog: { options, index }, button }) => {\n          console.log(options, index, button);\n          closeDialog(options, index);\n        }\n      }\n    ],\n    contentRenderer: () => <p>弹框内容-自定义底部按钮</p>\n  });\n}\n\nfunction onOpenClick() {\n  addDialog({\n    title: \"打开后的回调\",\n    open: ({ options, index }) => message({ options, index } as any),\n    contentRenderer: () => <p>弹框内容-打开后的回调</p>\n  });\n}\n\nfunction onCloseCallBackClick() {\n  addDialog({\n    title: \"关闭后的回调\",\n    closeCallBack: ({ options, index, args }) => {\n      console.log(options, index, args);\n      let text = \"\";\n      if (args?.command === \"cancel\") {\n        text = \"您点击了取消按钮\";\n      } else if (args?.command === \"sure\") {\n        text = \"您点击了确定按钮\";\n      } else {\n        text = \"您点击了右上角关闭按钮或者空白页\";\n      }\n      message(text);\n    },\n    contentRenderer: () => <p>弹框内容-关闭后的回调</p>\n  });\n}\n\n// 这里为了演示方便，使用了嵌套写法，实际情况下最好把 addDialog 函数抽出来 套娃不可取\nfunction onNestingClick() {\n  addDialog({\n    title: \"嵌套的弹框\",\n    contentRenderer: ({ index }) => (\n      <el-button\n        onClick={() =>\n          addDialog({\n            title: `第${index + 1}个子弹框`,\n            width: \"40%\",\n            contentRenderer: ({ index }) => (\n              <el-button\n                onClick={() =>\n                  addDialog({\n                    title: `第${index + 1}个子弹框`,\n                    width: \"30%\",\n                    contentRenderer: () => (\n                      <>\n                        <el-button round onClick={() => closeAllDialog()}>\n                          哎呦，你干嘛，赶快关闭所有弹框\n                        </el-button>\n                      </>\n                    )\n                  })\n                }\n              >\n                点击打开第{index + 1}个子弹框\n              </el-button>\n            )\n          })\n        }\n      >\n        点击打开第{index + 1}个子弹框\n      </el-button>\n    )\n  });\n}\n\n// 满足在 contentRenderer 内容区更改弹框自身属性值的场景\nfunction onUpdateClick() {\n  const curPage = ref(1);\n  addDialog({\n    title: `第${curPage.value}页`,\n    contentRenderer: () => (\n      <>\n        <el-button\n          disabled={curPage.value > 1 ? false : true}\n          onClick={() => {\n            curPage.value -= 1;\n            updateDialog(`第${curPage.value}页`);\n          }}\n        >\n          上一页\n        </el-button>\n        <el-button\n          onClick={() => {\n            curPage.value += 1;\n            updateDialog(`第${curPage.value}页`);\n          }}\n        >\n          下一页\n        </el-button>\n      </>\n    )\n  });\n}\n\n// 结合Form表单（第一种方式，弹框关闭立刻恢复初始值）通过 props 属性接收子组件的 prop 并赋值\nfunction onFormOneClick() {\n  addDialog({\n    width: \"30%\",\n    title: \"结合Form表单（第一种方式）\",\n    contentRenderer: () => forms,\n    props: {\n      // 赋默认值\n      formInline: {\n        user: \"菜虚鲲\",\n        region: \"浙江\"\n      }\n    },\n    closeCallBack: ({ options, args }) => {\n      // options.props 是响应式的\n      const { formInline } = options.props as FormProps;\n      const text = `姓名：${formInline.user} 城市：${formInline.region}`;\n      if (args?.command === \"cancel\") {\n        // 您点击了取消按钮\n        message(`您点击了取消按钮，当前表单数据为 ${text}`);\n      } else if (args?.command === \"sure\") {\n        message(`您点击了确定按钮，当前表单数据为 ${text}`);\n      } else {\n        message(`您点击了右上角关闭按钮或者空白页，当前表单数据为 ${text}`);\n      }\n    }\n  });\n}\n\n// 结合Form表单（第二种方式）h 渲染函数 https://cn.vuejs.org/api/render-function.html#h\nconst formInline = ref({\n  user: \"菜虚鲲\",\n  region: \"浙江\"\n});\nconst resetFormInline = cloneDeep(formInline.value);\nfunction onFormTwoClick() {\n  addDialog({\n    width: \"30%\",\n    title: \"结合Form表单（第二种方式）\",\n    contentRenderer: () =>\n      h(forms, {\n        formInline: formInline.value\n      }),\n    closeCallBack: () => {\n      message(\n        `当前表单数据为 姓名：${formInline.value.user} 城市：${formInline.value.region}`\n      );\n      // 重置表单数据\n      formInline.value = cloneDeep(resetFormInline);\n    }\n  });\n}\n\n// 结合Form表单（第三种方式）createVNode 渲染函数 https://cn.vuejs.org/guide/extras/render-function.html#creating-vnodes\nconst formThreeInline = ref({\n  user: \"菜虚鲲\",\n  region: \"浙江\"\n});\nconst resetFormThreeInline = cloneDeep(formThreeInline.value);\nfunction onFormThreeClick() {\n  addDialog({\n    width: \"30%\",\n    title: \"结合Form表单（第三种方式）\",\n    contentRenderer: () =>\n      createVNode(forms, {\n        formInline: formThreeInline.value\n      }),\n    closeCallBack: () => {\n      message(\n        `当前表单数据为 姓名：${formThreeInline.value.user} 城市：${formThreeInline.value.region}`\n      );\n      // 重置表单数据\n      formThreeInline.value = cloneDeep(resetFormThreeInline);\n    }\n  });\n}\n\n// 结合Form表单（第四种方式）使用jsx语法\n// 需要注意的是如果 forms 没注册，这里 forms 注册了是因为上面 contentRenderer: () => forms、h(forms) 、createVNode(createVNode) 间接给注册了\n// 如果只使用了jsx语法，如下 `contentRenderer: () => <forms formInline={formFourInline.value} />` 是不会给 forms 组件进行注册的，需要在 `script` 中任意位置（最好是末尾）写上 forms 即可\n// 同理如果在 tsx 文件中，这么使用 `contentRenderer: () => <forms formInline={formFourInline.value} />`，也是不会给 forms 组件进行注册，需要在 return 中写上 forms\nconst formFourInline = ref({\n  user: \"菜虚鲲\",\n  region: \"浙江\"\n});\nconst resetFormFourInline = cloneDeep(formFourInline.value);\nfunction onFormFourClick() {\n  addDialog({\n    width: \"30%\",\n    title: \"结合Form表单（第四种方式）\",\n    contentRenderer: () => <forms formInline={formFourInline.value} />,\n    closeCallBack: () => {\n      message(\n        `当前表单数据为 姓名：${formFourInline.value.user} 城市：${formFourInline.value.region}`\n      );\n      // 重置表单数据\n      formFourInline.value = cloneDeep(resetFormFourInline);\n    }\n  });\n}\n\n// 子组件 prop 为 primitive 类型的 demo\nconst formPrimitiveParam = ref(\"Hello World\");\nconst resetFormPrimitiveParam = ref(formPrimitiveParam.value);\nfunction onFormPrimitiveFormClick() {\n  addDialog({\n    width: \"30%\",\n    title: \"子组件 prop 为 primitive 类型 demo\",\n    contentRenderer: () =>\n      h(formPrimitive, {\n        data: formPrimitiveParam.value,\n        \"onUpdate:data\": val => (formPrimitiveParam.value = val)\n      }),\n    closeCallBack: () => {\n      message(`当前表单内容：${formPrimitiveParam.value}`);\n      // 重置表单数据\n      formPrimitiveParam.value = resetFormPrimitiveParam.value;\n    }\n  });\n}\n\nfunction onBeforeCancelClick() {\n  addDialog({\n    title: \"点击底部取消按钮的回调\",\n    contentRenderer: () => (\n      <p>弹框内容-点击底部取消按钮的回调（会暂停弹框的关闭）</p>\n    ),\n    beforeCancel: (done, { options, index }) => {\n      console.log(\n        \"%coptions, index===>>>: \",\n        \"color: MidnightBlue; background: Aquamarine; font-size: 20px;\",\n        options,\n        index\n      );\n      // done(); // 需要关闭把注释解开即可\n    }\n  });\n}\n\nfunction onBeforeSureClick() {\n  addDialog({\n    title: \"点击底部确定按钮的回调\",\n    contentRenderer: () => (\n      <p>\n        弹框内容-点击底部确定按钮的回调（会暂停弹框的关闭，经常用于新增、编辑弹框内容后调用接口）\n      </p>\n    ),\n    beforeSure: (done, { options, index }) => {\n      console.log(\n        \"%coptions, index===>>>: \",\n        \"color: MidnightBlue; background: Aquamarine; font-size: 20px;\",\n        options,\n        index\n      );\n      // done(); // 需要关闭把注释解开即可\n    }\n  });\n}\n</script>\n\n<template>\n  <el-card shadow=\"never\">\n    <template #header>\n      <div class=\"card-header\">\n        <span class=\"font-medium\">\n          二次封装 element-plus 的\n          <el-link\n            href=\"https://element-plus.org/zh-CN/component/dialog.html\"\n            target=\"_blank\"\n            style=\"margin: 0 4px 5px; font-size: 16px\"\n          >\n            Dialog\n          </el-link>\n          ，采用函数式调用弹框组件（更多操作实例请参考\n          <span\n            class=\"cursor-pointer text-primary\"\n            @click=\"router.push({ name: 'Dept' })\"\n            >系统管理页面</span\n          >\n          ）\n        </span>\n      </div>\n    </template>\n    <el-space wrap>\n      <el-button @click=\"onBaseClick\"> 基本使用 </el-button>\n      <el-button @click=\"onDraggableClick\"> 可拖拽 </el-button>\n      <el-button @click=\"onFullscreenClick\"> 全屏 </el-button>\n      <el-button @click=\"onFullscreenIconClick\"> 全屏按钮 </el-button>\n      <el-button @click=\"onModalClick\"> 无背景遮罩层 </el-button>\n      <el-button @click=\"onStyleClick\"> 自定义弹出位置 </el-button>\n      <el-button @click=\"onoOpenDelayClick\"> 延时2秒打开弹框 </el-button>\n      <el-button @click=\"onCloseDelayClick\"> 延时2秒关闭弹框 </el-button>\n      <el-button @click=\"onShowCloseClick\">\n        不显示右上角关闭按钮图标\n      </el-button>\n      <el-button @click=\"onBeforeCloseClick\"> 禁止通过键盘ESC关闭 </el-button>\n      <el-button @click=\"onCloseOnClickModalClick\">\n        禁止通过点击modal关闭\n      </el-button>\n      <el-button @click=\"onHideFooterClick\"> 隐藏底部取消、确定按钮 </el-button>\n      <el-button @click=\"onHeaderRendererClick\"> 自定义头部 </el-button>\n      <el-button @click=\"onFooterRendererClick\"> 自定义底部 </el-button>\n      <el-button @click=\"onFooterButtonsClick\"> 自定义底部按钮 </el-button>\n      <el-button @click=\"onOpenClick\"> 打开后的回调 </el-button>\n      <el-button @click=\"onCloseCallBackClick\"> 关闭后的回调 </el-button>\n      <el-button @click=\"onNestingClick\"> 嵌套的弹框 </el-button>\n      <el-button @click=\"onUpdateClick\"> 更改弹框自身属性值 </el-button>\n    </el-space>\n    <el-divider />\n    <el-space wrap>\n      <el-button @click=\"onFormOneClick\">\n        结合Form表单（第一种方式）\n      </el-button>\n      <el-button @click=\"onFormTwoClick\">\n        结合Form表单（第二种方式）\n      </el-button>\n      <el-button @click=\"onFormThreeClick\">\n        结合Form表单（第三种方式）\n      </el-button>\n      <el-button @click=\"onFormFourClick\">\n        结合Form表单（第四种方式）\n      </el-button>\n      <el-button @click=\"onFormPrimitiveFormClick\">\n        子组件 prop 为 primitive 类型\n      </el-button>\n    </el-space>\n    <el-divider />\n    <el-space wrap>\n      <el-button @click=\"onBeforeCancelClick\">\n        点击底部取消按钮的回调（会暂停弹框的关闭）\n      </el-button>\n      <el-button @click=\"onBeforeSureClick\">\n        点击底部确定按钮的回调（会暂停弹框的关闭，经常用于新增、编辑弹框内容后调用接口）\n      </el-button>\n    </el-space>\n  </el-card>\n</template>\n"],"names":["router","useRouter","onBaseClick","addDialog","title","contentRenderer","_createVNode2","_createTextVNode2","onDraggableClick","draggable","h","onFullscreenClick","fullscreen","createVNode","onFullscreenIconClick","fullscreenIcon","onModalClick","modal","onStyleClick","top","style","marginRight","onoOpenDelayClick","debounce","openDelay","onCloseDelayClick","closeDelay","onShowCloseClick","showClose","onBeforeCloseClick","closeOnPressEscape","onCloseOnClickModalClick","closeOnClickModal","onHideFooterClick","hideFooter","onHeaderRendererClick","headerRenderer","close","titleId","titleClass","_resolveComponent2","default","onFooterRendererClick","footerRenderer","options","index","onClick","closeDialog","onFooterButtonsClick","footerButtons","label","size","type","btnClick","dialog","button","console","text","bg","onOpenClick","open","onCloseCallBackClick","closeCallBack","args","onNestingClick","width","_Fragment","closeAllDialog","onUpdateClick","curPage","ref","updateDialog","onFormOneClick","forms","props","formInline","user","region","message","command","cloneDeep","onFormTwoClick","resetFormInline","formThreeInline","onFormThreeClick","resetFormThreeInline","formFourInline","onFormFourClick","resetFormFourInline","formPrimitiveParam","resetFormPrimitiveParam","onFormPrimitiveFormClick","val","data","onBeforeCancelClick","onBeforeSureClick","done","_ctx","_cache","_component_el_link","_resolveComponent","_component_el_space","_component_el_divider","_component_el_card","_openBlock","_createBlock"],"mappings":"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"}