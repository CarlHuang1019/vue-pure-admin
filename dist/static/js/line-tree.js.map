{"version":3,"file":"line-tree.js","sources":["../../../src/components/ReTreeLine/index.ts","../../../src/views/able/line-tree.vue"],"sourcesContent":["// 参考https://www.npmjs.com/package/element-tree-line (主要是替换需要通过函数传参的方式去注册组件，并添加更好的类型支持，并移除this.$scopedSlots，在3.x中,将所有this.$scopedSlots替换为this.$slots)\nimport { isFunction } from \"@pureadmin/utils\";\nimport { h, defineComponent } from \"vue\";\nimport type { PropType } from \"vue\";\nimport \"./index.scss\";\nimport type {\n  TreeNode,\n  TreeData,\n  TreeNodeData\n} from \"element-plus/es/components/tree-v2/src/types\";\n\n/** 树形连接线组件 */\nexport default defineComponent({\n  name: \"ReTreeLine\",\n  props: {\n    node: {\n      type: Object as PropType<TreeNode>,\n      required: true\n    },\n    data: {\n      type: Array as PropType<TreeNodeData>,\n      default: () => {}\n    },\n    treeData: {\n      type: Array as PropType<TreeData>,\n      default: () => []\n    },\n    indent: {\n      type: Number,\n      default: 16\n    },\n    showLabelLine: {\n      type: Boolean,\n      default: true\n    }\n  },\n  setup(_, context) {\n    const { slots } = context;\n    const getScopedSlot = slotName => {\n      if (!slotName) {\n        return null;\n      }\n      const slotNameSplits = slotName.split(\"||\");\n      let slot = null;\n      for (let index = 0; index < slotNameSplits.length; index++) {\n        const name = slotNameSplits[index];\n        slot = (slots || {})[name];\n      }\n      return slot;\n    };\n    const getSlotValue = (slot, scopedData, defaultNode = null) => {\n      if (isFunction(slot)) {\n        return slot(scopedData) || defaultNode;\n      }\n      return slot || defaultNode;\n    };\n\n    return {\n      getScopedSlot,\n      getSlotValue\n    };\n  },\n  render() {\n    // 自定义整行节点label区域\n    const scopeSlotDefault = this.getScopedSlot(\"default\");\n    // 显示横线时自定义节点label区域\n    const labelSlot = this.getScopedSlot(\"node-label\");\n    // 显示横线时追加在横线右边的内容\n    const afterLabelSlot = this.getScopedSlot(\"after-node-label\");\n    const labelNodes = scopeSlotDefault\n      ? this.getSlotValue(scopeSlotDefault, {\n          node: this.node,\n          data: this.data\n        })\n      : [\n          labelSlot\n            ? this.getSlotValue(labelSlot, {\n                node: this.node,\n                data: this.data\n              })\n            : h(\"span\", { class: \"element-tree-node-label\" }, this.node.label),\n          this.showLabelLine\n            ? h(\"span\", {\n                class: \"element-tree-node-label-line\"\n              })\n            : null,\n          this.getSlotValue(afterLabelSlot, {\n            node: this.node,\n            data: this.data\n          })\n        ];\n    // 取得每一层的当前节点是不是在当前层级列表的最后一个\n    const lastnodeArr = [];\n    let currentNode = this.node;\n    while (currentNode) {\n      let parentNode = currentNode.parent;\n      // 兼容element-plus的 el-tree-v2 (Virtualized Tree 虚拟树)\n      if (currentNode.level === 1 && !currentNode.parent) {\n        // el-tree-v2的第一层node是没有parent的，必需 treeData 创建一个parent\n        if (!this.treeData || !Array.isArray(this.treeData)) {\n          throw Error(\n            \"if you using el-tree-v2 (Virtualized Tree) of element-plus,element-tree-line required data.\"\n          );\n        }\n        parentNode = {\n          children: Array.isArray(this.treeData)\n            ? this.treeData.map(item => {\n                return { ...item, key: item.id };\n              })\n            : [],\n          level: 0,\n          key: \"node-0\",\n          parent: null\n        };\n      }\n      if (parentNode) {\n        // element-plus的 el-tree-v2 使用的是children和key， 其他使用的是 childNodes和id\n        const index = (parentNode.children || parentNode.childNodes).findIndex(\n          item => (item.key || item.id) === (currentNode.key || currentNode.id)\n        );\n        lastnodeArr.unshift(\n          index === (parentNode.children || parentNode.childNodes).length - 1\n        );\n      }\n      currentNode = parentNode;\n    }\n    const lineNodes = [];\n    for (let i = 0; i < this.node.level; i++) {\n      lineNodes.push(\n        h(\"span\", {\n          class: {\n            \"element-tree-node-line-ver\": true,\n            \"last-node-line\": lastnodeArr[i] && this.node.level - 1 !== i,\n            \"last-node-isLeaf-line\": lastnodeArr[i] && this.node.level - 1 === i\n          },\n          style: { left: this.indent * i + \"px\" }\n        })\n      );\n    }\n    return h(\n      \"span\",\n      {\n        class: \"element-tree-node-label-wrapper\"\n      },\n      [labelNodes].concat(lineNodes).concat([\n        h(\"span\", {\n          class: \"element-tree-node-line-hor\",\n          style: {\n            width: (this.node.isLeaf ? 24 : 8) + \"px\",\n            left: (this.node.level - 1) * this.indent + \"px\"\n          }\n        })\n      ])\n    );\n  }\n});\n","<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport { clone } from \"@pureadmin/utils\";\nimport { transformI18n } from \"@/plugins/i18n\";\nimport ElTreeLine from \"@/components/ReTreeLine\";\nimport { extractPathList, deleteChildren } from \"@/utils/tree\";\nimport { usePermissionStoreHook } from \"@/store/modules/permission\";\n\ndefineOptions({\n  name: \"LineTree\"\n});\n\nconst menusTree = clone(usePermissionStoreHook().wholeMenus, true);\nconst menusData = computed(() => {\n  return deleteChildren(menusTree);\n});\nconst expandedKeys = extractPathList(menusData.value);\nconst dataProps = {\n  value: \"uniqueId\",\n  children: \"children\"\n};\n</script>\n\n<template>\n  <el-card shadow=\"never\">\n    <template #header>\n      <div class=\"card-header\">\n        <span class=\"font-medium\">\n          扩展elemenet-plus的树形组件包括虚拟树组件，支持连接线\n        </span>\n      </div>\n    </template>\n\n    <el-row :gutter=\"24\">\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\" class=\"mb-[20px]\">\n        <el-card shadow=\"never\">\n          <template #header>\n            <div class=\"card-header\">\n              <span class=\"font-medium\"> 普通树结构 </span>\n            </div>\n          </template>\n          <div class=\"max-h-[550px] overflow-y-auto\">\n            <el-tree\n              :data=\"menusData\"\n              :props=\"dataProps\"\n              show-checkbox\n              default-expand-all\n              node-key=\"uniqueId\"\n              :indent=\"30\"\n              ><template v-slot:default=\"{ node }\">\n                <el-tree-line :node=\"node\" :showLabelLine=\"true\">\n                  <template v-slot:node-label>\n                    <span class=\"text-sm\">\n                      {{ transformI18n(node.data.meta.title) }}\n                    </span>\n                  </template>\n                </el-tree-line>\n              </template>\n            </el-tree>\n          </div>\n        </el-card>\n      </el-col>\n\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\n        <el-card shadow=\"never\">\n          <template #header>\n            <div class=\"card-header\">\n              <span class=\"font-medium\"> 虚拟树结构 </span>\n            </div>\n          </template>\n          <div class=\"max-h-[550px] overflow-y-auto\">\n            <el-tree-v2\n              :data=\"menusData\"\n              :props=\"dataProps\"\n              show-checkbox\n              :height=\"550\"\n              :default-expanded-keys=\"expandedKeys\"\n            >\n              <template v-slot:default=\"{ node }\">\n                <el-tree-line\n                  :node=\"node\"\n                  :treeData=\"menusData\"\n                  :showLabelLine=\"true\"\n                  :indent=\"30\"\n                >\n                  <template v-slot:node-label>\n                    <span class=\"text-sm\">\n                      {{ transformI18n(node.data.meta.title) }}\n                    </span>\n                  </template>\n                </el-tree-line>\n              </template>\n            </el-tree-v2>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </el-card>\n</template>\n"],"names":["ElTreeLine","defineComponent","_","context","slots","slotName","slotNameSplits","slot","index","name","scopedData","defaultNode","isFunction","scopeSlotDefault","labelSlot","afterLabelSlot","labelNodes","lastnodeArr","currentNode","parentNode","item","lineNodes","i","menusTree","clone","usePermissionStoreHook","menusData","computed","deleteChildren","expandedKeys","extractPathList","dataProps"],"mappings":"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"}