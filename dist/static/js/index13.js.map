{"version":3,"file":"index13.js","sources":["../../../src/components/ReSplitPane/resizer.tsx","../../../src/components/ReSplitPane/index.tsx","../../../src/views/components/split-pane/index.vue"],"sourcesContent":["import { computed, unref, defineComponent } from \"vue\";\nimport \"./resizer.css\";\n\nexport default defineComponent({\n  name: \"Resizer\",\n  props: {\n    split: {\n      type: String,\n      required: true\n    },\n    className: {\n      type: String,\n      default: \"\"\n    }\n  },\n  setup(props) {\n    const classes = computed(() => {\n      return [\"splitter-pane-resizer\", props.split, props.className].join(\" \");\n    });\n\n    return () => <div class={unref(classes)}></div>;\n  }\n});\n","import { defineComponent, ref, unref, computed, PropType } from \"vue\";\nimport resizer from \"./resizer\";\nimport \"./index.css\";\n\nexport interface ContextProps {\n  minPercent: number;\n  defaultPercent: number;\n  split: string;\n}\n\n/** 切割面板组件 */\nexport default defineComponent({\n  name: \"SplitPane\",\n  components: { resizer },\n  props: {\n    splitSet: {\n      type: Object as PropType<ContextProps>,\n      require: true\n    }\n  },\n  emits: [\"resize\"],\n  setup(props, ctx) {\n    const active = ref(false);\n    const hasMoved = ref(false);\n    const percent = ref(props.splitSet?.defaultPercent);\n    const type = props.splitSet?.split === \"vertical\" ? \"width\" : \"height\";\n    const resizeType = props.splitSet?.split === \"vertical\" ? \"left\" : \"top\";\n\n    const leftClass = ref([\n      \"splitter-pane splitter-paneL\",\n      props.splitSet?.split\n    ]);\n\n    const rightClass = ref([\n      \"splitter-pane splitter-paneR\",\n      props.splitSet?.split\n    ]);\n\n    const cursor = computed(() => {\n      return active.value\n        ? props.splitSet?.split === \"vertical\"\n          ? { cursor: \"col-resize\" }\n          : { cursor: \"row-resize\" }\n        : { cursor: \"default\" };\n    });\n\n    const onClick = (): void => {\n      if (!hasMoved.value) {\n        percent.value = 50;\n        ctx.emit(\"resize\", percent.value);\n      }\n    };\n\n    const onMouseDown = (): void => {\n      active.value = true;\n      hasMoved.value = false;\n    };\n\n    const onMouseUp = (): void => {\n      active.value = false;\n    };\n\n    const onMouseMove = (e: any): void => {\n      if (e.buttons === 0 || e.which === 0) {\n        active.value = false;\n      }\n\n      if (active.value) {\n        let offset = 0;\n        let target = e.currentTarget;\n        if (props.splitSet?.split === \"vertical\") {\n          while (target) {\n            offset += target.offsetLeft;\n            target = target.offsetParent;\n          }\n        } else {\n          while (target) {\n            offset += target.offsetTop;\n            target = target.offsetParent;\n          }\n        }\n\n        const currentPage =\n          props.splitSet?.split === \"vertical\" ? e.pageX : e.pageY;\n        const targetOffset =\n          props.splitSet?.split === \"vertical\"\n            ? e.currentTarget.offsetWidth\n            : e.currentTarget.offsetHeight;\n        const percents =\n          Math.floor(((currentPage - offset) / targetOffset) * 10000) / 100;\n\n        if (\n          percents > props.splitSet?.minPercent &&\n          percents < 100 - props.splitSet?.minPercent\n        ) {\n          percent.value = percents;\n        }\n\n        ctx.emit(\"resize\", percent.value);\n\n        hasMoved.value = true;\n      }\n    };\n\n    return () => (\n      <>\n        <div\n          class=\"vue-splitter-container clearfix\"\n          style={unref(cursor)}\n          onMouseup={() => onMouseUp()}\n          onMousemove={() => onMouseMove(event)}\n        >\n          <div\n            class={unref(leftClass)}\n            style={{ [unref(type)]: unref(percent) + \"%\" }}\n          >\n            {ctx.slots.paneL()}\n          </div>\n          <resizer\n            style={`${unref([resizeType])}:${unref(percent)}%`}\n            split={props.splitSet?.split}\n            onMousedown={() => onMouseDown()}\n            onClick={() => onClick()}\n          ></resizer>\n          <div\n            class={unref(rightClass)}\n            style={{ [unref(type)]: 100 - unref(percent) + \"%\" }}\n          >\n            {ctx.slots.paneR()}\n          </div>\n          <div v-show={unref(active)} class=\"vue-splitter-container-mask\"></div>\n        </div>\n      </>\n    );\n  }\n});\n","<script setup lang=\"ts\">\nimport splitpane, { ContextProps } from \"@/components/ReSplitPane\";\nimport { reactive } from \"vue\";\n\ndefineOptions({\n  name: \"SplitPane\"\n});\n\nconst settingLR: ContextProps = reactive({\n  minPercent: 20,\n  defaultPercent: 40,\n  split: \"vertical\"\n});\n\nconst settingTB: ContextProps = reactive({\n  minPercent: 20,\n  defaultPercent: 40,\n  split: \"horizontal\"\n});\n</script>\n\n<template>\n  <el-card shadow=\"never\">\n    <template #header>\n      <div class=\"card-header\">\n        <span class=\"font-medium\">切割面板组件</span>\n      </div>\n    </template>\n    <div class=\"split-pane\">\n      <splitpane :splitSet=\"settingLR\">\n        <!-- #paneL 表示指定该组件为左侧面板 -->\n        <template #paneL>\n          <!-- 自定义左侧面板的内容 -->\n          <div class=\"dv-a\">A</div>\n        </template>\n        <!-- #paneR 表示指定该组件为右侧面板 -->\n        <template #paneR>\n          <!-- 再次将右侧面板进行拆分 -->\n          <splitpane :splitSet=\"settingTB\">\n            <template #paneL>\n              <div class=\"dv-b\">B</div>\n            </template>\n            <template #paneR>\n              <div class=\"dv-c\">C</div>\n            </template>\n          </splitpane>\n        </template>\n      </splitpane>\n    </div>\n  </el-card>\n</template>\n\n<style lang=\"scss\" scoped>\n$W: 100%;\n$H: 70vh;\n\n.split-pane {\n  width: 70vw;\n  height: $H;\n  font-size: 50px;\n  color: #fff;\n  text-align: center;\n  border: 1px solid #e5e6eb;\n\n  .dv-a,\n  .dv-b,\n  .dv-c {\n    width: $W;\n    height: $W;\n    line-height: $H;\n    color: rgba($color: dodgerblue, $alpha: 80%);\n  }\n\n  .dv-b,\n  .dv-c {\n    line-height: 250px;\n  }\n\n  .dv-b {\n    color: rgba($color: #000, $alpha: 80%);\n  }\n\n  .dv-c {\n    color: rgba($color: #ce272d, $alpha: 80%);\n  }\n}\n</style>\n"],"names":["defineComponent","name","props","split","type","String","required","className","default","setup","classes","computed","join","_createVNode","unref","components","resizer","splitSet","Object","require","emits","ctx","active","ref","hasMoved","percent","defaultPercent","resizeType","leftClass","rightClass","cursor","value","onClick","emit","onMouseDown","onMouseUp","onMouseMove","e","buttons","which","offset","target","currentTarget","offsetLeft","offsetParent","offsetTop","currentPage","pageX","pageY","targetOffset","offsetWidth","offsetHeight","percents","Math","floor","minPercent","_Fragment","onMouseup","onMousemove","event","slots","paneL","onMousedown","paneR","_withDirectives","_vShow","settingLR","reactive","settingTB"],"mappings":"gJAGA,MAAeA,IAAgB,CAC7BC,KAAM,UACNC,MAAO,CACLC,MAAO,CACLC,KAAMC,OACNC,SAAU,EACX,EACDC,UAAW,CACTH,KAAMC,OACNG,QAAS,EACX,CACD,EACDC,MAAMP,EAAO,CACX,MAAMQ,EAAUC,EAAS,IAChB,CAAC,wBAAyBT,EAAMC,MAAOD,EAAMK,SAAS,EAAEK,KAAK,GAAG,CACxE,EAED,MAAO,IAAAC,EAAA,MAAA,CAAA,MAAkBC,EAAMJ,CAAO,CAAS,EAAA,IAAA,CACjD,CACF,CAAC,ECXD,MAAeV,IAAgB,CAC7BC,KAAM,YACNc,WAAY,CAAEC,QAAAA,CAAS,EACvBd,MAAO,CACLe,SAAU,CACRb,KAAMc,OACNC,QAAS,EACX,CACD,EACDC,MAAO,CAAC,QAAQ,EAChBX,MAAMP,EAAOmB,EAAK,eAChB,MAAMC,EAASC,EAAI,EAAK,EAClBC,EAAWD,EAAI,EAAK,EACpBE,EAAUF,GAAIrB,EAAAA,EAAMe,WAANf,YAAAA,EAAgBwB,cAAc,EAC5CtB,IAAOF,EAAAA,EAAMe,WAANf,YAAAA,EAAgBC,SAAU,WAAa,QAAU,SACxDwB,IAAazB,EAAAA,EAAMe,WAANf,YAAAA,EAAgBC,SAAU,WAAa,OAAS,MAE7DyB,EAAYL,EAAI,CACpB,gCACArB,EAAAA,EAAMe,WAANf,YAAAA,EAAgBC,KAAK,CACtB,EAEK0B,EAAaN,EAAI,CACrB,gCACArB,EAAAA,EAAMe,WAANf,YAAAA,EAAgBC,KAAK,CACtB,EAEK2B,EAASnB,EAAS,IAAM,OAC5B,OAAOW,EAAOS,QACV7B,EAAAA,EAAMe,WAANf,YAAAA,EAAgBC,SAAU,WACxB,CAAE2B,OAAQ,YAAa,EACvB,CAAEA,OAAQ,YAAa,EACzB,CAAEA,OAAQ,UAChB,CAAC,EAEKE,EAAUA,IAAY,CACrBR,EAASO,QACZN,EAAQM,MAAQ,GAChBV,EAAIY,KAAK,SAAUR,EAAQM,KAAK,IAI9BG,EAAcA,IAAY,CAC9BZ,EAAOS,MAAQ,GACfP,EAASO,MAAQ,IAGbI,EAAYA,IAAY,CAC5Bb,EAAOS,MAAQ,IAGXK,EAAeC,GAAiB,eAKpC,IAJIA,EAAEC,UAAY,GAAKD,EAAEE,QAAU,KACjCjB,EAAOS,MAAQ,IAGbT,EAAOS,MAAO,CAChB,IAAIS,EAAS,EACTC,EAASJ,EAAEK,cACf,KAAIxC,EAAAA,EAAMe,WAANf,YAAAA,EAAgBC,SAAU,WAC5B,KAAOsC,GACLD,GAAUC,EAAOE,WACjBF,EAASA,EAAOG,iBAGlB,MAAOH,GACLD,GAAUC,EAAOI,UACjBJ,EAASA,EAAOG,aAIpB,MAAME,IACJ5C,EAAAA,EAAMe,WAANf,YAAAA,EAAgBC,SAAU,WAAakC,EAAEU,MAAQV,EAAEW,MAC/CC,IACJ/C,EAAAA,EAAMe,WAANf,YAAAA,EAAgBC,SAAU,WACtBkC,EAAEK,cAAcQ,YAChBb,EAAEK,cAAcS,aAChBC,EACJC,KAAKC,OAAQR,EAAcN,GAAUS,EAAgB,GAAK,EAAI,IAG9DG,IAAWlD,EAAAA,EAAMe,WAANf,YAAAA,EAAgBqD,aAC3BH,EAAW,MAAMlD,EAAAA,EAAMe,WAANf,YAAAA,EAAgBqD,cAEjC9B,EAAQM,MAAQqB,GAGlB/B,EAAIY,KAAK,SAAUR,EAAQM,KAAK,EAEhCP,EAASO,MAAQ,EACnB,GAGF,MAAO,IAAA,OAAAlB,OAAAA,EAAA2C,QAAA3C,EAAA,MAAA,CAAA,MAAA,kCAAA,MAIMC,EAAMgB,CAAM,EAAC,UACT2B,IAAMtB,EAAW,EAAA,YACfuB,IAAMtB,EAAYuB,KAAK,CAAC,EAAA,CAAA9C,EAAA,MAAA,CAAA,MAG5BC,EAAMc,CAAS,EAAC,MAChB,CAAE,CAACd,EAAMV,CAAI,CAAC,EAAGU,EAAMW,CAAO,EAAI,GAAI,GAE5CJ,CAAAA,EAAIuC,MAAMC,MAAO,CAAA,CAAA,EAAAhD,EAAAG,EAAA,CAAA,MAGV,GAAEF,EAAM,CAACa,CAAU,CAAC,CAAE,IAAGb,EAAMW,CAAO,CAAE,IAAE,OAC3CvB,EAAAA,EAAMe,WAANf,YAAAA,EAAgBC,MAAK,YACf2D,IAAM5B,EAAa,EAAA,QACvBF,IAAMA,EAAQ,CAAC,EAAA,IAAA,EAAAnB,EAAA,MAAA,CAAA,MAGjBC,EAAMe,CAAU,EAAC,MACjB,CAAE,CAACf,EAAMV,CAAI,CAAC,EAAG,IAAMU,EAAMW,CAAO,EAAI,GAAI,GAElDJ,CAAAA,EAAIuC,MAAMG,MAAK,CAAE,CAAA,EAAAC,EAAAnD,EAAA,MAAA,CAAA,MAAA,6BAAA,EAAA,IAAA,EAAA,CAAA,CAAAoD,EAEPnD,EAAMQ,CAAM,CAAC,CAG/B,CAAA,CAAA,CAAA,CAAA,CAAA,EACH,CACF,CAAC,+TC/HD,MAAM4C,EAA0BC,EAAS,CACvC,WAAY,GACZ,eAAgB,GAChB,MAAO,UAAA,CACR,EAEKC,EAA0BD,EAAS,CACvC,WAAY,GACZ,eAAgB,GAChB,MAAO,YAAA,CACR"}